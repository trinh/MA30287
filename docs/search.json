[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "MA30287: Mathematics of Planet Earth",
    "section": "",
    "text": "Preface\nWelcome to to the 2023-24 delivery of MA30287 Maths of Planet Earth at the University of Bath. In the below figure, you will see an image that, to some extent, represents the way mathematicians and other learned scientists see the Planet.",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "index.html#lectures-and-office-hours",
    "href": "index.html#lectures-and-office-hours",
    "title": "MA30287: Mathematics of Planet Earth",
    "section": "Lectures and office hours",
    "text": "Lectures and office hours\n\\(\\nextSection\\)\nLectures take place at the following times and locations:\n\nTuesdays 9:15 in 6W 1.2\nWednesdays 11:15 in 6W 1.2\nThursdays 15:15 in 6W 1.2\n\nOffice hours: You will be able to find me for an office hour in 4W 2.18 on Thursdays (following the lecture). Typically it is best to set this up, beforehand, by email appointment.",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "index.html#coursework-and-examinations",
    "href": "index.html#coursework-and-examinations",
    "title": "MA30287: Mathematics of Planet Earth",
    "section": "Coursework and examinations",
    "text": "Coursework and examinations\n\\(\\nextSection\\)\nYour final mark will be 25% coursework and 75% final exam.\nDetails of the coursework will be released in Week 7 and it will be due in Week 101.",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "index.html#resources",
    "href": "index.html#resources",
    "title": "MA30287: Mathematics of Planet Earth",
    "section": "Resources",
    "text": "Resources\n\\(\\nextSection\\)\nIn general, you will have access to a few kinds of resources:\n\nThe Moodle portal will be the main organisation portal.\nLecture notes, coursework, and other resources will be found in an online format and will be linked on Moodle.\nCoding will be done via Noteable, accessed via the Moodle website.\n\nNaturally, because this is a relatively new module at Bath, there will be a fair amount of activity as we settle the material over the semester. Whenever we complete a lecture note (i.e. a ‘chapter’), we will use a box like this to indicate when the material was covered and in which lecture, and to mention any particular additions made.\n\n\n\n\n\n\nNote\n\n\n\nThe material in this note was covered in Lecture XX.\n\n\nHopefully by the time the module ends, every relevant chapter will have such a note. This allows you to judge what material has been ‘finalised’.",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "index.html#prerequisites",
    "href": "index.html#prerequisites",
    "title": "MA30287: Mathematics of Planet Earth",
    "section": "Prerequisites",
    "text": "Prerequisites\n\\(\\nextSection\\)\nThis course officially requires MA20221 (modeling and dynamical systems) or XX20231 (mathematical and statistical methods for the life sciences). It is designed to be somewhat stand-alone in the sense that applied mathematical techniques learned in other courses will be introduced in some capacity. Such techniques will involve:\n\nSolutions of ordinary differential equations (MA10230 and MA20220).\nMultivariable calculus, partial differentiation, and multiple integrals (MA10230 and MA10236); some review/introduction of concepts from MA20223.\nDynamical systems, stability, phase planes (MA20221, MA30060).\nNumerical methods in Python (MA10276).\n\nWhenever possible, I have isolated such reviews/introductions and these can be found in the Mathematical methods section of these notes. During the current phase, Bath is undergoing changes to Years 1 and 2, so some of the above content may have shifted; these shifts are typically minor and cosmetic.",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "index.html#resources-1",
    "href": "index.html#resources-1",
    "title": "MA30287: Mathematics of Planet Earth",
    "section": "Resources",
    "text": "Resources\n\\(\\nextSection\\)\nThis course is designed around the following sources:\n\nSustainable energy – without the hot air by (MacKay 2009)\nMathematics & Climate by (Kaper and Engler 2013)\nMathematical Geoscience by (Fowler 2011)\nA gentle introduction to numerical simulations with Python\n\nHowever, the current MPE course is also quite ‘bespoke’ at Bath, so there is no single source with all the information. It has been designed to cover a selection of topical subjects and complementary to other materials you might have learned previously in your studies.\n\n\n\n\nFowler, Andrew. 2011. Mathematical Geoscience. Vol. 36. Springer.\n\n\nKaper, H., and H. Engler. 2013. Mathematics and Climate. SIAM.\n\n\nMacKay, D. J. C. 2009. Sustainable Energy – Without the Hot Air. UIT Cambridge Ltd.",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "index.html#footnotes",
    "href": "index.html#footnotes",
    "title": "MA30287: Mathematics of Planet Earth",
    "section": "",
    "text": "Subject to confirmation.↩︎",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "lectureplan.html",
    "href": "lectureplan.html",
    "title": "Lecture plan",
    "section": "",
    "text": "A lecture plan can be found at this link.",
    "crumbs": [
      "Lecture plan"
    ]
  },
  {
    "objectID": "part-01-intro/intro-preface.html",
    "href": "part-01-intro/intro-preface.html",
    "title": "1  What does Mathematics of Planet Earth mean?",
    "section": "",
    "text": "Mathematics of Planet Earth seems like an incredibly broad description for a course, but perhaps in order to give a rough idea of what such a course might include, we can consider the following diagram in Figure 1.1, which illustrates different categories and subject areas that are involved in the modelling of a full Earth system.\n\n\n\n\n\n\nFigure 1.1: The many components of a full Earth System Model\n\n\n\nIt would be possible to spend a lifetime studying any one aspects of the above categories, and they span many different areas of study, including: (i) engineering (civil, fluids, mechanical, etc.); (ii) physics (geosciences, mechanics); (iii) Earth sciences; (iv) policy and health; and so forth and so on. As mathematicians, we also have a unique perspective, and applied mathematics plays important roles in many of the above categories.\nIn essence, this course will include topics and themes are united by aspects of mathematical modelling and mathematical analysis and this is what distinguishes our style of study from adjacent areas of science and social science.\nThis course will focus on models of Planet Earth. As such, one can divide modelling into (at least) three types: (i) conceptual modelling; (ii) physics-based modelling; and (iii) statistical or data-based modelling. A basic conceptual model of the temperature on the planet consists of a differential equation that expresses basic principles of energy conservation, but that significantly coarse-grains the dynamics (to the extent where you would not necessarily need to know very much fluid mechanics or physics to study it). Analysis of such models is done numerically or semi-analytically (similar to the kind of phase-plane analysis of ODEs you would have seen in other modules). In this course, we will also study conceptual models of oceans and floods.\nA secondary part of this course will involve more in-depth analysis of the physical models that govern the blue elements of the above figure. This moves us from the toy box (conceptual) models studied above to digging into the underlying physics—this also falls into the category of Mathematical Geoscience or Fluid Mechanics.\nStatistical or data-based approaches are not as emphasised in this course (though they remain very important tools). Such approaches include, for example, analyses of time-series of climate variables, or machine-learning approaches for building data-based models on large quantities of data.",
    "crumbs": [
      "Introduction",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>What does Mathematics of Planet Earth mean?</span>"
    ]
  },
  {
    "objectID": "part-01-intro/intro-PDEs.html",
    "href": "part-01-intro/intro-PDEs.html",
    "title": "2  Conservation laws",
    "section": "",
    "text": "2.1 Derivation of the 1D heat equation\nIn the first chapter of (Fowler 2011), there is a concise introduction to the different categories of techniques and approaches that you might use when doing mathematical modelling in the real world. Some of these ideas will be introduced to you in this course.\nHere, we provide a brief intro to the highlights, involving the use of conservation laws (and PDEs) and also the concept of non-dimensionalisation (which you would have encountered previously), studied in Chapter 3.\nConservation laws can be expressed as mathematical equations that represent the idea that some quantity is conserved. In processes governing the planet, these might correspond to conservation of heat, of water, of air, of momentum, etc.\nIn Chapter 4, we will develop the simplest possible model governing the temperature on the surface of the Earth. It is a conservation equation for energy and is zero-dimensional (does not involve time and does not involve spatial variation).\nIn order to demonstrate some of the basic principles of this course, let us demonstrate the derivation of the heat equation. We are interested in modelling the heat in a volume, \\(V\\), which, for the sake of concreteness is given by a long cylinder with its axis along \\(x \\in [0, L]\\). We assume that the side walls of the cylinder are insulated and the temperature only varies along the \\(x\\) direction.\nAt any point along this rod, the internal heat is given by \\(\\rho c T(x, t)\\), where \\(\\rho\\) is the density of the material (kg/m3), \\(c\\) is the specific heat capacity (J/(kg K)), and \\(T\\) is the temperature (K). Therefore, the heat energy along any segment in the rod is calculated from\nIf the heat changes, then the rate of change of heat energy is given the time derivative of the above quantity. By conservation of energy, any change of the internal energy must be equal to the inflow or outflow of heat at the ends, \\(x = a\\) or \\(x = b\\). We therefore write \\(q\\) for the flux (or flow) of heat.\nWe need a constitutive law that dictates how energy is exchanged at the boundaries. Based on intuition, it is sensible to assume that the flow of heat proceeds from hot to cold. For example, hot air rises towards cool air; or heat from a hot mug of tea flows and diffuses outwards into a cold room. Therefore, we write this as\nThis is known as Fourier’s law. The quantity \\(k\\) is the thermal conductivity, and its units are W/(m K). Because a Watt is a Joule/s, you can also see that the units of \\(k\\) are J/(m K s). The quantity \\(q\\) is the flux, and you can verify that it is given in units of J/(m2 s).\nTherefore by energy conservation, we have \\[\n\\frac{\\mathrm{d}}{\\mathrm{d}t}  \\int_a^b \\rho c T \\, \\mathrm{d}x = q(x = a, t) - q(x = b, t),\n\\] i.e. the change in internal heat is equal to the flow through the ends. Note that we have added-in the heat flux due to \\(x = a\\) assuming positive \\(q\\) refers to heat moving from left-to-right. Conversely, we subtract it away from \\(x = b\\). We can alternatively write this as \\[\n\\frac{\\mathrm{d}}{\\mathrm{d}t}  \\int_a^b \\rho c T \\, \\mathrm{d}x = -\\int_a^b \\frac{\\partial q}{\\partial x} \\, \\mathrm{d}x.\n\\]\nSubstitution Fourier’s law, we can then write \\[\n\\int_a^b \\rho c \\frac{{\\partial}T}{{\\partial}t} \\, \\mathrm{d}x = \\int_a^b k \\frac{{\\partial}^2 T}{{\\partial}x^2} \\, \\mathrm{d}x.\n\\] Because the above integral identity needs to be true for all possible values of \\(a\\) and \\(b\\), then it must be true everywhere (this is sometimes referred to as the du Bois-Reymond lemma or the bump lemma. Therefore we are left with the classic heat equation.\nIn order to produce a sensible physical solution, partial differential equations are typically supplemented by initial conditions and boundary conditions. The initial condition prescribes the state of the function at some initial time, typically \\(t = 0\\). Boundary conditions prescribe how the function behaves on the boundary of its domain, which in this case is \\(x = 0\\) and \\(x = L\\). An example might be\nwhich expresses, respectively, that the temperature starts from a constant temperature, \\(T_0\\), and where the ends of the rod are kept at temperature \\(T_a\\) and \\(T_b\\).",
    "crumbs": [
      "Introduction",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Conservation laws</span>"
    ]
  },
  {
    "objectID": "part-01-intro/intro-PDEs.html#derivation-of-the-1d-heat-equation",
    "href": "part-01-intro/intro-PDEs.html#derivation-of-the-1d-heat-equation",
    "title": "2  Conservation laws",
    "section": "",
    "text": "Internal heat energy\n\n\n\n\\[\n\\text{heat energy in $[a, b]$} = \\int_a^b \\rho c T \\, \\mathrm{d}x.\n\\]\n\n\n\n\n\n\n\n\n\n\nFourier’s law\n\n\n\nFourier’s law in 1D specifies that the heat flux is given by \\[\nq(x, t) = -k \\frac{{\\partial}T}{{\\partial}x}.\n\\]\n\n\n\n\n\n\n\n\n\n\n\nHeat equation\n\n\n\n\\[\n\\rho c\\frac{{\\partial}T}{{\\partial}t} = k \\frac{{\\partial}^2 T}{{\\partial}x^2}.\n\\tag{2.1}\\]\n\n\n\n\n\n\n\n\n\nInitial conditions (IC) and boundary conditions (BC)\n\n\n\n\\[\n\\begin{gathered}\nT(x, 0) = T_0 \\\\\nT(0, 0) = T_a \\\\\nT(L, 0) = T_b\n\\end{gathered}\n\\]\n\n\n\n\n2.1.1 Steady states and long-time behaviours\n\\(\\nextSection\\)\nWhen we refer to a steady-state solution, we are typically referring to a time-independent solution.\n\nDefinition 2.1 (Steady-state solutions) Given an evolving system described by a function, say \\(f(x, t)\\), defined on some spatial domain and with \\(t &gt; 0\\), the steady-state solution refers to time-independent solutions with \\[\n\\frac{{\\partial} f}{{\\partial}t} = 0.\n\\]\n\nOne can envisage that as the system evolves with \\(t \\to \\infty\\), it reaches a state that is independent of time. However, not all systems will approach a steady state. Moreover, not all steady states are stable or attractive (and might never be reachable in a real-life experiment).\nFor the case of heat flow, such a steady-state solution would be \\(T(x, t) = T(x)\\). In this case, \\[\n\\frac{{\\partial}T}{{\\partial}t} = 0 \\Longrightarrow\nk \\frac{{\\partial}^2 T}{{\\partial}x^2} = 0.\n\\]\nTherefore, for the heat flow along a segment of length \\(L\\) with left boundary held at \\(T_a\\) and right boundary held at \\(T_b\\) we have \\[\nT_\\text{steady}(x) = \\left(\\frac{T_b - T_a}{L}\\right) x + T_a.\n\\]",
    "crumbs": [
      "Introduction",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Conservation laws</span>"
    ]
  },
  {
    "objectID": "part-01-intro/intro-PDEs.html#deriving-the-1d-transport-continuity-equation",
    "href": "part-01-intro/intro-PDEs.html#deriving-the-1d-transport-continuity-equation",
    "title": "2  Conservation laws",
    "section": "2.2 Deriving the 1D transport (continuity) equation",
    "text": "2.2 Deriving the 1D transport (continuity) equation\n\\(\\nextSection\\)\nConsider the mass transport of some substance with density \\(\\rho(x, t)\\), immersed in a fluid, along a one-dimensional line in \\(x\\). If desired, you may consider the substance as existing in three-dimensional space, and propagating along the \\(x\\)-direction, with its behaviour independent of \\(y\\) and \\(z\\). Initially, when considered at time \\(t\\), the mass of the substance between two points, \\(a\\), and \\(b\\), is: \\[\nm_\\text{blob}(t) = \\int_{a(t)}^{b(t)} \\rho (x, t) \\, \\mathrm{d}x.\n\\] As time increases the particles of the substance will move due to the fluid moving; at the same time, the fluid volume which is initially contained in \\(x\\in [a(0), b(0)]\\) will also move. We want to find how the mass of the blob changes in time, and hence consider the quantity \\[\n\\frac{\\mathrm{d}m_\\text{blob}}{\\mathrm{d}t}  = \\int_a^b \\frac{{\\partial}\\rho}{{\\partial}t} \\, \\mathrm{d}x + \\rho(b, t) \\frac{\\mathrm{d}b}{\\mathrm{d}t} - \\rho(a, t) \\frac{\\mathrm{d}a}{\\mathrm{d}t}.\n\\]\nThe above considers the intrinsic rate of change of the function within the integrand, but then adds the extra mass due to the right boundary shifting rightwards (\\(b\\)) and subtracts the mass due to the left boundary shifting rightwards (\\(a\\)). It is known as the Leibniz integral rule. We can thus write this within the integral as \\[\n\\frac{\\mathrm{d}m_\\text{blob}}{\\mathrm{d}t}  = \\int_a^b \\left[ \\frac{{\\partial}\\rho}{{\\partial}t} + \\frac{{\\partial}}{{\\partial}x} \\left(\\rho(x, t) \\frac{\\mathrm{d}x}{\\mathrm{d}t}\\right) \\right] \\, \\mathrm{d}x.\n\\] However, the quantity \\[\n\\frac{\\mathrm{d}x}{\\mathrm{d}t} \\equiv u(x, t)\n\\] represents the velocity of the fluid (which for the moment we assume to be a known and provided quantity). Therefore we can write the mass change as\n\\[\n\\frac{\\mathrm{d}m_\\text{blob}}{\\mathrm{d}t}  = \\int_a^b \\left[ \\frac{{\\partial}\\rho}{{\\partial}t} + \\frac{{\\partial}}{{\\partial}x} \\left(\\rho u\\right) \\right] \\, \\mathrm{d}x.\n\\]\nThis result, which explains how to pass a derivative through an integral express mass of a substance within a flow is known as the Reynolds Transport Theorem. We have just derived it in 1D.\n\n\n\n\n\n\nReynolds Transport Theorem\n\n\n\nLet \\(\\rho = \\rho(x, t)\\) be some quantity (such as density) that is advected along a one-dimensional line in \\(x\\) due to a fluid with velocity \\(u(x, t)\\). Then \\[\n\\frac{\\mathrm{d}}{\\mathrm{d}t} \\int_{a(t)}^{b(t)} \\rho \\, \\mathrm{d}x = \\int_{a(t)}^{b(t)} \\left[ \\frac{{\\partial}\\rho}{{\\partial}t} + \\frac{{\\partial}}{{\\partial}x}(\\rho u)\\right] \\mathrm{d}x.\n\\]\n\n\nWe may now consider the substance being transported along the \\(x\\)-direction. If there is no interior creation or destruction of the source, then by conservation of mass, it must be the case that \\[\n\\frac{\\mathrm{d}m_\\text{blob}}{\\mathrm{d}t} = 0.\n\\]\nThus, again since the above integral identity applies to all possible values of \\(a\\) and \\(b\\), it must be the case that the integrand is zero. Thus we conclude with the so-called tranport equation.\n\n\n\n\n\n\nOne-dimensional transport equation\n\n\n\nThe transport of a substance described by \\(\\rho(x, t)\\) advected along a one-dimensional line in \\(x\\) due to a fluid with velocity \\(u(x, t)\\) is given by \\[\n\\frac{{\\partial}\\rho}{{\\partial}t} + \\frac{{\\partial}}{{\\partial}x}(\\rho u) = 0.\n\\]\n\n\nAgain, we must consider the above problem in combination with potential initial conditions and boundary conditions. For instance, we might specify that the substance begins from some initial state, say \\[\n\\rho(x, 0) = \\rho_0(x).\n\\]\nThe boundary conditions are more subtle. It is not always obvious what the boundary conditions should be on a problem.\nHere is an example of a solution of such a problem.\n\n\n\n\n\n\nLinear advection equation with constant speed\n\n\n\nSolve the problem given by \\[\n\\frac{{\\partial}\\rho}{{\\partial}t} + c\\frac{{\\partial}\\rho}{{\\partial}x} = 0,\n\\] where the velocity \\(u = c\\) is constant. You may assume the initial condition is given by \\[\n\\rho(x, 0) = \\rho_0(x) = e^{-x^2}.\n\\]\n\n\n\n\n\n\n\n\nSolution\n\n\n\nThe general solution is given by \\[\n\\rho(x, t) = F(x - ct),\n\\] where \\(F\\) is an arbitrary (differentiable) function. You can verify this via the chain rule, noting that \\[\n\\frac{\\partial F}{\\partial t} = -c F'(x - ct) \\quad \\text{and} \\quad\n\\frac{\\partial F}{\\partial x} = F'(x - ct).\n\\] Applying the initial condition at \\(t = 0\\) gives \\(F(x) = \\rho_0(x)\\) and thus \\[\n\\rho(x, t) = e^{-(x - ct)^2}.\n\\]\nYou may plot this to discover that it is, as perhaps expected, a Gaussian profile moving to the right at constant speed (for \\(c &gt; 0\\)).\n\n\n\n\n\n\nFowler, Andrew. 2011. Mathematical Geoscience. Vol. 36. Springer.",
    "crumbs": [
      "Introduction",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Conservation laws</span>"
    ]
  },
  {
    "objectID": "part-01-intro/intro-nondim.html",
    "href": "part-01-intro/intro-nondim.html",
    "title": "3  Dimensional scaling analysis",
    "section": "",
    "text": "3.1 Dimensional quantities\nPutting a mathematical model into non-dimensional form is fundamental (Fowler 2011). When we refer to a “back-of-the-envelope calculation”, we often mean simple algebraic calculations that still nevertheless provide enormous insight on problems. Such analyses are often based on dimensional analysis, which identifies the relationships between the different quantities involved in the problem.\nEvery physical quantity, say Q, can be expressed as a product of a dimensional unit, denoted [Q], and a magnitude, say Q’. Thus we write \\[\nQ = Q'[Q]\n\\] For example, if \\(x\\) corresponds to the physical length in a problem, we might select \\([x] = \\mathrm{km}\\) or \\([x] = \\mathrm{yards}\\) or \\([x] = \\mathrm{m}\\). It is important to choose the dimensionalisation to suit the problem under consideration.",
    "crumbs": [
      "Introduction",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Dimensional scaling analysis</span>"
    ]
  },
  {
    "objectID": "part-01-intro/intro-nondim.html#dimensional-quantities",
    "href": "part-01-intro/intro-nondim.html#dimensional-quantities",
    "title": "3  Dimensional scaling analysis",
    "section": "",
    "text": "SI Units\n\n\n\nThe International System (SI) of Base Units sets out a distinct selection of choices for dimensions in certain physical quantities. The seven fundamental dimensional units are\n\n[Length] = metre, \\(\\mathrm{m}\\)\n[Time] = seconds, \\(\\mathrm{s}\\)\n[Mass] = kilogram, \\(\\mathrm{kg}\\)\n[Temperature] = Kelvin, \\(\\mathrm{K}\\),\n[Electric current] = ampere, \\(\\mathrm{A}\\)\n[Light intensity] = candela, \\(\\mathrm{cd}\\)\n[Material quantity] = mole, \\(\\mathrm{mol}\\)\n\nDimensional units that can be expressed in terms of other fundamental units are known as derived units. For example:\n\n[Speed] = \\(\\mathrm{m} \\, \\mathrm{s}^{-1}\\)\n[Acceleration] = \\(\\mathrm{m} \\, \\mathrm{s}^{-2}\\)\n[Force] = \\(\\mathrm{kg} \\, \\mathrm{m} \\, \\mathrm{s}^{-2}\\)",
    "crumbs": [
      "Introduction",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Dimensional scaling analysis</span>"
    ]
  },
  {
    "objectID": "part-01-intro/intro-nondim.html#dimensional-homogeneity-and-non-dimensionalisation",
    "href": "part-01-intro/intro-nondim.html#dimensional-homogeneity-and-non-dimensionalisation",
    "title": "3  Dimensional scaling analysis",
    "section": "3.2 Dimensional homogeneity and non-dimensionalisation",
    "text": "3.2 Dimensional homogeneity and non-dimensionalisation\n\\(\\nextSection\\)\nAll terms in any equation must have the same dimensions. This is the principle of dimensional homogenuity. For example, Newton’s second law expresses the fact that \\[\nF = m \\frac{\\mathrm{d}^2x}{\\mathrm{d}t^2},\n\\] where \\(m\\) is mass, \\(x\\) is a unit of length, and \\(t\\) is time. We can check, then, that the units do indeed match up on either side. Here, the RHS has units of \\([m][x]/[t]^2\\) or in SI units, \\(\\mathrm{kg} \\, \\mathrm{m} \\, \\mathrm{s}^{-2}\\). This indeed matches our previous given SI unit decomposition for force.\nNotice in addition that the input to functions like \\(\\cos\\theta\\) and \\(e^z\\) must be non-dimensional (or dimensionless).\nThe process of nondimensionalisation is then as follows. Given an equation, we know that each term must have the same dimension. Therefore, we can scale all the dependent and independent variables by dimensional constants in order to yield a non-dimensional equation.\nWhy this is an important tool is demonstrated by the below.",
    "crumbs": [
      "Introduction",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Dimensional scaling analysis</span>"
    ]
  },
  {
    "objectID": "part-01-intro/intro-nondim.html#returning-to-the-heat-equation",
    "href": "part-01-intro/intro-nondim.html#returning-to-the-heat-equation",
    "title": "3  Dimensional scaling analysis",
    "section": "3.3 Returning to the heat equation",
    "text": "3.3 Returning to the heat equation\n\\(\\nextSection\\)\nExact units are not relevant for dynamics, and it is instead the ratio of units that we care about. To apply this principle, let us non-dimensionalise the equation Equation 2.1. Let us consider the heat equation as given by the system \\[\n\\begin{aligned}\n\\frac{\\partial T}{\\partial t} &= \\kappa \\frac{\\partial^2 T}{\\partial x^2} \\\\\nT(x, 0) &= T_\\text{init} \\\\\nT(0, t) &= T_a \\\\\nT(L, t) &= T_b.\n\\end{aligned}\n\\]\nNote that the constant \\(\\kappa\\) is known as the thermal diffusivity, and is given by \\[\n\\kappa = \\frac{k}{\\rho c},\n\\] which were the units previously introduced.\nWe introduce typical scales for each of the variables. For example, we non-dimensionalise the temperature, distance, and time by setting \\[\nT = [T] T', \\qquad x = [x] x', \\qquad t = [t] t'.\n\\] Remember that via the chain rule, we have that \\[\n\\frac{\\mathrm{d}}{\\mathrm{d}x} = \\frac{\\mathrm{d}x'}{\\mathrm{d}x} \\frac{\\mathrm{d}}{\\mathrm{d}x'} = \\frac{1}{[x]} \\frac{\\mathrm{d}}{\\mathrm{d}x'}.\n\\]\nSubstitution into the equation now yields \\[\n\\begin{aligned}\n\\frac{\\partial T'}{\\partial t'} &= \\frac{\\kappa[t]}{[x]^2}\\frac{\\partial^2 T}{\\partial x^2} \\\\\nT'(x', 0) &= \\frac{T_\\text{init}}[T]\\\\\nT'(0, t') &= \\frac{T_a}{[T]} \\\\\nT'(L/[x], t') &= \\frac{T_b}{[T]}.\n\\end{aligned}\n\\]\nBe sure to work out the above for yourself. For example, notice that the previous boundary at \\(x = L\\) is now sent to \\(x' = L/[x]\\). Now we see that the final equation is beautifully simple: At this point, we can identify a crucial non-dimensional parameter given by \\[\n\\Pi = \\frac{\\kappa [t]}{[x]^2} = \\frac{k [t]}{\\rho c [x]^2}.\n\\]\nAlthough this looks quite complicated, you can test that this parameter is indeed non-dimensional by looking up the units for thermal conductivity, \\(k\\), density \\(\\rho\\), and specific heat \\(c\\), and verifying that indeed \\(\\Pi\\) is non-dimensional.",
    "crumbs": [
      "Introduction",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Dimensional scaling analysis</span>"
    ]
  },
  {
    "objectID": "part-01-intro/intro-nondim.html#choice-of-units",
    "href": "part-01-intro/intro-nondim.html#choice-of-units",
    "title": "3  Dimensional scaling analysis",
    "section": "3.4 Choice of units",
    "text": "3.4 Choice of units\n\\(\\nextSection\\)\nIt is important to remember that there are technically no wrong choices for the scales [x], [T], and [t], as long as they yield consistent balances. However, some choices are better than others for the context of the problem. Let us select: \\[\n[x] = L \\qquad [T] = T_\\text{init}.\n\\]\nThis means our unit of length is “one pipe” (if this is indeed a pipe), and our unit of temperature is whatever the initial temperature was set to be. The choice of time is free at the moment, and therefore we can select time as \\[\n\\Pi = \\frac{\\kappa [t]}{[x]^2} = 1 \\Longrightarrow [t] = \\frac{L^2}{k}.\n\\]\nNow we see that the final equation is beautifully simple: \\[\n\\begin{aligned}\n\\frac{\\partial T'}{\\partial t'} &= \\frac{\\partial^2 T}{\\partial x^2} \\\\\nT'(x', 0) &= 1 \\\\\nT'(0, t') &= \\frac{T_a}{T_\\text{init}} \\equiv A, \\\\\nT'(1, t') &= \\frac{T_b}{T_\\text{init}} \\equiv B.\n\\end{aligned}\n\\tag{3.1}\\]",
    "crumbs": [
      "Introduction",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Dimensional scaling analysis</span>"
    ]
  },
  {
    "objectID": "part-01-intro/intro-nondim.html#interpretation",
    "href": "part-01-intro/intro-nondim.html#interpretation",
    "title": "3  Dimensional scaling analysis",
    "section": "3.5 Interpretation",
    "text": "3.5 Interpretation\n\\(\\nextSection\\)\nWhat is the whole point of the above exercise?\nIn the original problem, there were five parameters: \\[\n\\kappa, \\qquad T_\\text{init}, \\qquad T_a, \\qquad T_b, \\qquad L.\n\\]\nImagine a situation where you are performing an analysis of heat spread in different pipes of different materials (characterised by \\(\\kappa\\)) and lengths (\\(L\\)), with different initial and boundary temperatures. That is potentially a highly complicated parameter space to search (five-dimensional).\nRather than solving the problem again and again for each change in parameters, what the analysis yielding (Equation 3.1) reveals is that the parameter space only needs to be two-dimensional, for parameters \\(A\\) and \\(B\\). Therefore, by solving the problem at many different values of \\(A\\) and \\(B\\), the solution space can be completely mapped.\nHere is an example. Consider heat diffusion through common brick, which possesses a thermal diffusivity of \\[\n\\kappa = 5.2 \\times 10^{-7} \\mathrm{m}^2/\\mathrm{s}.\n\\] Therefore a brick that is about L = 10cm = 0.1m in size has a typical timescale of \\[\n[t] = \\frac{L^2}{\\kappa} \\approx 1.9 \\times 10^4 \\mathrm{s} \\approx 5 \\mathrm{hrs}.\n\\]\nThe above choice of [t] is representative of the typical timescale you can expect for heat to diffuse through the brick. As you can see it’s very long.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIn summary, we have gone from a system where we needed to consider five parameters to a system where we only need to specify two (essentially, the ratio of the initial heat to the boundary values). This is an enormous simplification.\nMoreover, your analysis has further identified the key non-dimensional parameters that appear, including: \\[\n\\Pi = \\frac{\\kappa [t]}{[x]^2}, \\qquad A = \\frac{T_a}{T_\\mathrm{init}}, \\qquad B = \\frac{T_b}{T_\\text{init}}, \\qquad \\frac{L}{[x]}\n\\]\nIn this particular problem, you had the freedom to choose \\(L\\) to remove one parameter (the ratio of lengths), and time could be chosen to set \\(\\Pi = 1\\).\n\n\n\n\n\n\n\n\n\n\nFowler, Andrew. 2011. Mathematical Geoscience. Vol. 36. Springer.",
    "crumbs": [
      "Introduction",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Dimensional scaling analysis</span>"
    ]
  },
  {
    "objectID": "part-01-intro/basic-energy-model.html",
    "href": "part-01-intro/basic-energy-model.html",
    "title": "4  Basic energy models",
    "section": "",
    "text": "4.1 The basic energy model\nIn this chapter, we introduce the simplest climate model to describe the temperature of the Earth. Despite its apparent simplicity, this basic climate model is the foundation of all further discussion. We will find that, according to the most basic model, the surface temperature of the Earth is expected to be much colder than it is actually; we conclude that the likely culprit is greenhouse gases.\nConsider the Earth as a single averaged body. Our goal is to obtain an equation for the surface temperature, \\(T\\), by considering the energy recieved from the sun versus the energy the Earth must emit into space. This kind of balance-equation procedure is used everywhere in mathematical modelling. In essence, we are looking to write down a precise statement of the following:\nwhere \\(E_{\\text{in}}\\) is the incoming energy from the sun and \\(E_{\\text{out}}\\) is the energy leaving the Earth. Note that the left hand-side (the internal energy) will depend on the temperature, \\(T\\).\nThe basic model is derived as follows.\nNote that the primary components of the global energy balance are radiative fluxes: we receive short-wave radiation (UV and visible light) from the Sun, and emit longwave radiation (infra-red) to space.\nFirst we consider incoming energy.\nNext we consider outgoing energy.\nNow combining the above equations, we have \\[\nE_{\\mathrm{in}} - E_{\\mathrm{out}} = \\pi R^2 Q (1 - a) - 4\\pi R^2 \\sigma \\gamma T^4,\n\\tag{4.5}\\] which gives the incoming energy per unit time.\nPutting in (Equation 4.5) and taking the limit of \\(\\Delta t \\to 0\\), we finally have a heat equation for the Earth’s temperature.\nThe above equation Equation 4.7 is time-dependent, but we may consider that the surface temperature, either over long-time or in an averaged sense, is dictated by the steady-state (time-independent) solution. Setting \\(\\mathrm{d}T/\\mathrm{d}t\\) to zero, we see that there is a unique steady-state given by \\[\nT = \\left(\\frac{Q(1-a)}{4\\sigma\\gamma}\\right)^{1/4}.\n\\]\nIf we take \\(Q \\approx 1370 \\,\\mathrm{W m}^{-2}\\), \\(a \\approx 0.3\\), \\(\\sigma \\approx 5.67 \\times 10^{-8} \\mathrm{W} \\,\\mathrm{m}^{-2} \\mathrm{K}^{-4}\\), we then get \\[\nT \\approx 255 \\mathrm{K} = -18^\\circ \\mathrm{C}.\n\\] under the assumption that \\(\\gamma = 1\\). That’s pretty cold! The actual average temperature is around \\(288 \\mathrm{K} \\approx 15 ^\\circ \\mathrm{C}\\).\nThe above back-of-the-envelope calculation seems to suggest that the parameter \\(\\gamma &lt; 1\\) plays an important role in keeping the Earth warm enough for us to live on, and indeed the value of \\(\\gamma\\) inferred by the above is roughly \\(\\gamma \\approx 0.61\\). Later on in the course, we will develop a more rigorous model to predict such a \\(\\gamma\\) by studying the properties of the atmosphere.",
    "crumbs": [
      "Introduction",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Basic energy models</span>"
    ]
  },
  {
    "objectID": "part-01-intro/basic-energy-model.html#the-basic-energy-model",
    "href": "part-01-intro/basic-energy-model.html#the-basic-energy-model",
    "title": "4  Basic energy models",
    "section": "",
    "text": "By considering the incoming radiation from the sun, obtain an estimate for the incoming energy, \\(E_{\\text{in}}\\).\nUse a constitutive law that indicates how much outgoing energy is produced by an object heated to some temperature.\nEquate the change in internal energy to be equal to the difference between the above two items.\n\n\n\n\n\n\n\n\nFigure 4.1: Radiation in the atmosphere\n\n\n\n\n\n\n\n\n\n\nEnergy from the Sun\n\n\n\nFirst, note that the shortwave radiation (UV and radiation) recieved from the sun is \\(Q \\approx 1370 \\text{ W$\\cdot$m$^{-2}$}\\) (which we consider measured at a point near the planet).\nIf we consider only that radiation that is absorbed into the Earth, we have \\[\nE_{\\mathrm{in}} = \\pi R^2 Q (1 - a),\n\\tag{4.2}\\] where \\(R\\) is the Earth’s radius.\nIn the above formula, we have multiplied the flux, \\(Q\\), with the visible surface area, \\(\\pi R^2\\). There is an additional multiplication by \\((1 - a)\\) where \\(a\\) is the planetary albedo, which characterises amount of energy reflected due to the surface properties. Light surfaces like snow will have high albedo, \\(a \\approx 0.9\\), while darker surfaces like the ocean have smaller albedo, \\(a \\approx 0.3\\). The global average albedo is \\(a \\approx 0.3\\).\n\n\n\n\n\n\n\n\n\nEnergy from the Earth\n\n\n\nWe now wish to characterise the energy, \\(E_{out}\\), and in the case of Earth, this will correspond to longwave radiation (infra-red) emitted into space. All bodies characterised by a temperature, say \\(T_e\\), will emit radiation, \\(Q_e\\). As a model, we can consider \\(Q_e\\) to be given by the Stefan-Boltzmann law, which states that \\[\nQ_e = \\sigma T_e^4,\n\\tag{4.3}\\] where \\(\\sigma \\approx 5.67 \\times 10^{-8} W m^{-2} K^{-4}\\) is the Stefan-Boltzmann constant.\nNow although the Earth’s surface may emit radiation according to (Equation 4.3), some of this radiation will be absorbed by the atmosphere and reflected back. This is the greenhouse effect. As a consequence of the greenhouse gas, the surface temperature of the Earth, \\(T\\), will be larger than the effective emitting temperature, \\(T_e\\). For the moment, we model this as \\[\nT_e = \\gamma^{1/4} T_e,\n\\tag{4.4}\\] where \\(\\gamma &lt; 1\\) is a greenhouse gas factor, which depends on the properties of the atmosphere.\n\n\n\n\n\n\n\n\n\nInternal heat energy\n\n\n\nDue to this incoming energy, the Earth will cool or heat in response. We need to know how the internal temperature of an object responds to an input in energy. The general formula is \\[\n\\text{Internal heat energy} = \\text{volume} \\times (\\rho c_p) \\times T.\n\\] The key quantity is the experimentally determined, \\(c_p\\), which corresponds to the specific heat capacity. It is given in the SI units of \\(\\mathrm{J} \\cdot \\mathrm{kg}^{-1} \\cdot \\mathrm{K}^{-1}\\), i.e. energy per unit mass per unit temperature. Note that this applied to a shell around the planet of thickness \\(d\\) in the atmosphere, and so the mass is given by \\[\n\\text{mass} = (4 \\pi R^2) d \\rho\n\\tag{4.6}\\] where \\(\\rho\\) is the average density of the atmosphere. Let us imagine the increase in temperature, \\(\\Delta T\\),during an interval of time, \\(\\Delta t\\). You can now verify that \\[\n\\Bigl[ (4 \\pi R^2) d \\rho \\Bigr] c_p (\\Delta T)\n\\] returns the units of Joules—i.e. this is the internal energy produced during the time \\(\\Delta t\\). We then have \\[\n\\Bigl[ (4 \\pi R^2) d \\rho \\Bigr] c_p \\Delta T =  \\Delta t (E_{in} - E_{out}).\n\\]\n\n\n\n\n\n\n\n\n\nZero-dimensional model for the surface temperature of the Earth\n\n\n\nThe Earth’s temperature, as measured on a layer of thickness \\(d\\) at the troposphere is given by the following ordinary differential equation (ODE) for \\(T = T(t)\\): \\[\nC \\frac{\\mathrm{d}T}{\\mathrm{d}t} = \\frac{1}{4} Q(1 - a) - \\sigma \\gamma T^4,\n\\tag{4.7}\\] where we have defined \\[\nC = \\rho c_p d\n\\] as the heat capacity of the atmosphere. Above, the solar flux, Q is often taken to be \\(Q = 1370\\) W/m2, \\(\\sigma = 5.67 \\times 10^{-8}\\) W/(m2K4), and \\(\\gamma \\leq 1\\) is the greenhouse gas factor.",
    "crumbs": [
      "Introduction",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Basic energy models</span>"
    ]
  },
  {
    "objectID": "part-01-intro/basic-energy-model.html#the-history-of-global-warming",
    "href": "part-01-intro/basic-energy-model.html#the-history-of-global-warming",
    "title": "4  Basic energy models",
    "section": "4.2 The history of global warming",
    "text": "4.2 The history of global warming\n\\(\\nextSection\\)\nThe history of global warming (and hence the estimation of \\(\\gamma\\)) is convoluted, but the origins can be considered as far back as the work of (Fourier 1827) and (Pouillet 1838), and is discussed in the work by (Van der Veen 2000).\n\n\n\n\n\n\nFigure 4.2: An illustration of Fourier’s glass box",
    "crumbs": [
      "Introduction",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Basic energy models</span>"
    ]
  },
  {
    "objectID": "part-01-intro/basic-energy-model.html#next-in-the-study-of-energy-balance-models",
    "href": "part-01-intro/basic-energy-model.html#next-in-the-study-of-energy-balance-models",
    "title": "4  Basic energy models",
    "section": "4.3 Next in the study of energy balance models?",
    "text": "4.3 Next in the study of energy balance models?\n\\(\\nextSection\\)\nAt this stage, the basic energy balance model studied in this chapter can be made more complex and realistic through many different extensions. For instance:\n\nConsider the effects of a non-constant and nonlinear albedo. Since the albedo depends on the material property (water vs. ice vs. land), we can incorporate a toy model for spatial variability by allowing the albedo to depend on temperature, \\(a = a(T)\\).\nConsider the time-dependence. What happens if the system starts out of the steady state? Does it tend to relax to its equilibrium profile? Can we analyse the temporal properties of the solutions?\nCan we incorporate latitude (or longitudinal) dependence into the model. For instance, should the albedo and solar radiation be considered as functions of the latitude?\nShould we incorporate the effects of diffusion (heat spreading out) or convection (heat transported with flows)?\nTo what extent should we consider the effects of the atmosphere on the absorption and reflection properties of the incoming (and outgoing) energy?\n\nMany of these questions are much more involve, as they require differential or partial differential equations. Therefore in the next few chapters, we will discuss, in a very general way, the collection of applied and numerical mathematics techniques that can be used when studying problems in the physical sciences.\n\n\n\n\nFourier, Joseph. 1827. “Mémoire Sur Les Températures Du Globe Terrestre Et Des Espaces Planétaires.” Mémoires de l’Académie Royale Des Sciences de l’Institut de France 7: 570–604.\n\n\nPouillet, Claude Servais Mathias. 1838. “Memoire Sur Le Chaleur Solaire.” Paris.\n\n\nVan der Veen, CJ. 2000. “Fourier and the ‘Greenhouse Effect’.” Polar Geography 24 (2): 132–52.",
    "crumbs": [
      "Introduction",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Basic energy models</span>"
    ]
  },
  {
    "objectID": "part-05-techniques/techniques.html",
    "href": "part-05-techniques/techniques.html",
    "title": "Practical applied mathematics",
    "section": "",
    "text": "As we go deeper into formulating the equations that model or govern aspects of Planet Earth, we will quickly come to the realisation that many such equations, even for the simplest minimal models, are not exactly solvable.\nFor example, in the analysis of the Ocean models later in the course, we develop the following “simple” model for the temperature in the ocean: \\[\n\\begin{aligned}\n\\frac{\\mathrm{d}x}{\\mathrm{d}t} &= \\delta(1 - x) - |f(x, y)|x, \\\\\n\\frac{\\mathrm{d}y}{\\mathrm{d}t} &= 1 - y - |f(x, y)|y,\n\\end{aligned}\n\\] where we have introduced the function, \\[\nf(x, y; R, \\lambda) = \\frac{1}{\\lambda}(Rx - y),\n\\]\nThis is quite a difficult problem! This is essentially a set of two nonlinear differential equations for two unknowns and three parameters. What kind of practical applied mathematics can we apply to study such problems?\nThe intention of this part is to introduce (and in some cases, review) three key concepts:\n\nAsymptotic approximations.\nNumerical solutions of differential equations.\nNumerical solutions of nonlinear equations (Newton’s method).\n\nas well as any additional tools you may need to study the kinds of differential equations involved in Maths of Planet Earth!",
    "crumbs": [
      "Practical applied mathematics"
    ]
  },
  {
    "objectID": "part-05-techniques/asymptotics01.html",
    "href": "part-05-techniques/asymptotics01.html",
    "title": "5  Asymptotic approximations I",
    "section": "",
    "text": "5.1 A simple quadratic\nOne powerful set of techniques for approximating solutions to equations is called asymptotic analysis or perturbation theory. To begin with, in this chapter, we introduce you to these techniques as a means to approximating the solutions to equations like: \\[\n\\epsilon x^2 + x - 1 = 0,\n\\] when \\(\\epsilon\\) is a small parameter.\nSoon, we apply the techniques to approximating solutions of differential equations.\nIf \\(\\epsilon = 0\\), then \\(x = 1\\). Moreover, if we substitute \\(x = 1\\) into the equation, then we see that the error is small and proportional to \\(\\epsilon\\). It is natural to seek an approximation in powers of \\(\\epsilon\\). We call this an . We write \\[\nx = x_0 + \\epsilon x_1 + \\epsilon^2 x_2 + \\ldots\n\\] Substitution into the equation yields \\[\n\\epsilon \\Bigl(x_0 + \\epsilon x_1 + \\epsilon^2 x_2 + \\ldots\\Bigr)^2 + \\Bigl( x_0 + \\epsilon x_1 + \\epsilon^2 x_2 + \\ldots \\Bigr) - 1 = 0.\n\\] Expand and collect terms in powers of \\(\\epsilon\\): \\[\n\\Bigl( x_0 - 1 \\Bigr) + \\epsilon\\Bigl(x_1 + x_0^2\\Bigr) + \\epsilon^2\\Bigl(x_2 + 2 x_0 x_1\\Bigr) + \\ldots = 0.\n\\] Now we equate coefficients at each order in \\(\\epsilon\\). This gives \\[\n\\begin{aligned}\nx_0 - 1 &= 0 \\Longrightarrow x_0 = 1 \\\\\nx_1 + x_0^2 &= 0 \\Longrightarrow x_1 = -1 \\\\\nx_2 + 2 x_0 x_1 &= 0 \\Longrightarrow x_2 = 2\n\\end{aligned}\n\\] We therefore have obtained the three-term approximation, \\[\nx = 1 - \\epsilon + 2\\epsilon^2 + \\ldots\n\\] Clearly we could continue this process ad infinitum obtaining increasingly accurate approximations to one of the roots.",
    "crumbs": [
      "Practical applied mathematics",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Asymptotic approximations I</span>"
    ]
  },
  {
    "objectID": "part-05-techniques/asymptotics01.html#a-simple-quadratic",
    "href": "part-05-techniques/asymptotics01.html#a-simple-quadratic",
    "title": "5  Asymptotic approximations I",
    "section": "",
    "text": "A singular quadratic\n\n\n\nConsider the solution of \\[\n\\epsilon x^2 + x - 1 = 0,\n\\tag{5.1}\\] where \\(\\epsilon\\) is a fixed and very small positive number, say \\(0.000001\\). Forget that we know how to solve a quadratic equation: is it possible to develop a systematic approximation method?\n\n\n\n\n5.1.1 The singular root\n\\(\\nextSection\\)\nBut where has the other quadratic root gone?\nThe problem is that in considering \\(\\epsilon\\) to be small, we began by ignoring the leading term, \\(\\epsilon x^2\\). We effectively assumed that the equation was primarily balanced by setting the \\(x\\) term with the \\(-1\\) term, and the sum of the two terms approximately equalling zero.\nBut if \\(|x|\\) is large, then clearly our assumption that \\(\\epsilon x^2\\) being small may not be necessarily true for it depends on how large \\(|x|\\) is compared to \\(\\epsilon\\). Note that if \\(|x|\\) is large, then necessarily the last term, \\(-1\\), is negligible in comparison. Therefore, in order for \\(\\epsilon x^2\\) to balance \\(x\\), we see that \\(|x|\\) must be of size \\(1/\\epsilon\\).\nTherefore this suggests that we should re-scale our solution as follows \\[\nx = \\frac{X}{\\epsilon}.\n\\]\nSubstitution into the original quadratic now yields \\[\nX^2 + X - \\epsilon = 0.\n\\] Now notice that \\(\\epsilon = 0\\) expresses the correct balance in order to detect that missing root. Again we write \\[\nX = X_0 + \\epsilon X_1 + \\epsilon^2 X_2 + \\ldots\n\\] and attempt to solve order by order. Substitution into the equation yields \\[\n\\Bigl(X_0 + \\epsilon X_1 + \\epsilon^2 X_2 + \\ldots\\Bigr)^2 + \\Bigl(X_0 + \\epsilon X_1 + \\epsilon^2 X_2 + \\ldots\\Bigr) - \\epsilon = 0.\n\\] Expand and collect orders of \\(\\epsilon\\): \\[\n\\begin{aligned}\nX_0^2 + X_0 &= 0 \\Longrightarrow X_0 = -1 \\\\\n2X_0 X_1 + X_1 -1 &= 0 \\Longrightarrow X_0 = -1,\n\\end{aligned}\n\\] and thus to two orders, we have \\[\nX = -1 - \\epsilon + \\ldots \\Longrightarrow x = - \\frac{1}{\\epsilon} - 1 + \\ldots\n\\]\nOf course, we have used a very simple example (a solvable quadratic) to illustrate the idea of asymptotic approximations, but you should hopefully see that this method is extensible to much more complicated equations.\n\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nep = np.linspace(1,0.1, 20)\nroot1 = (-1 + np.sqrt(1-4*ep*(-1)))/(2*ep)\nroot2 = (-1 - np.sqrt(1-4*ep*(-1)))/(2*ep)\nasym1 = 1 - ep\nasym2 = -1/ep - 1\nplt.plot(ep, root1, 'o')\nplt.plot(ep, root2, 'o')\nplt.plot(ep, asym1, '-')\nplt.plot(ep, asym2, '-')\nplt.legend(['$x_1$', '$x_2$', '2-term asymp.', '2-term asym'])\nplt.xlabel('$\\epsilon$')\nplt.ylabel('x');\n\n&lt;&gt;:14: SyntaxWarning: invalid escape sequence '\\e'\n&lt;&gt;:14: SyntaxWarning: invalid escape sequence '\\e'\n/var/folders/lw/7v5bfgnj6gj4qhr6fykhcp3h0000gn/T/ipykernel_36030/3662636573.py:14: SyntaxWarning: invalid escape sequence '\\e'\n  plt.xlabel('$\\epsilon$')",
    "crumbs": [
      "Practical applied mathematics",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Asymptotic approximations I</span>"
    ]
  },
  {
    "objectID": "part-05-techniques/asymptotics01.html#order-notation-and-the-tilde-sign-for-asymptotic",
    "href": "part-05-techniques/asymptotics01.html#order-notation-and-the-tilde-sign-for-asymptotic",
    "title": "5  Asymptotic approximations I",
    "section": "5.2 Order notation and the tilde sign for asymptotic",
    "text": "5.2 Order notation and the tilde sign for asymptotic\n\\(\\nextSection\\)\nWe define precisely what we mean when we say that two functions, say \\(f\\) and \\(g\\), exhibit the same behaviour in some limit, say \\(\\epsilon \\to 0\\) or \\(x \\to x_0\\) or \\(x \\to \\infty\\) and so forth. For instance, we claim that the graphs of \\(\\sin(x)\\) and \\(x\\) look very similar as \\(x \\to 0\\). Thus we might write \\[\n    \\sin(x) \\sim x \\quad \\text{as $x \\to 0$.}\n\\tag{5.2}\\]\nThis notation of similarity allows us to specify functional behaviours at a deeper level than just limits. As you can see, it is not as useful to specify that \\[\n\\lim_{x \\to 0} \\sin{x} = \\lim_{x\\to 0} x.\n\\] In contrast, the asymptotic relation is much more prescriptive about the way that the functions are approaching the limit.\n\n\n\n\n\n\nDefinition of \\(\\sim\\), \\(\\gg\\), and \\(\\ll\\)\n\n\n\nFirst, the notation \\[\nf(x) \\ll g(x), \\qquad x \\to x_0,\n\\] is read as “\\(f(x)\\) is much smaller than \\(g(x)\\) as \\(x \\to x_0\\)” and means \\[\n\\lim_{x\\to x_0} \\frac{f(x)}{g(x)} = 0.  \n\\] We may analogously use \\(g(x) \\gg f(x)\\) for “much greater than”.\nSecond, the notation \\[\nf(x) \\sim g(x), \\qquad x \\to x_0,\n\\] is read as “\\(f(x)\\) is asymptotic to \\(g(x)\\) as \\(x \\to x_0\\)”, and means that the error between \\(f\\) and \\(g\\) tends to zero as \\(x \\to x_0\\), or \\[\n\\lim_{x\\to x_0} \\frac{f(x)}{g(x)} = 1.  \n\\] We will often say “\\(f\\) is like \\(g\\)” or “\\(f\\) behaves like \\(g\\)”,\n\n\nHere are some examples.\n\n\n\n\n\n\nExamples\n\n\n\n\n\\(\\sin x \\sim x \\sim \\tan x\\) as \\(x \\to 0\\)\n\\(x^2 + x + 1 \\sim \\dfrac{x^3 + \\sin x}{1 + x}\\) as \\(x \\to \\infty\\)\n\\(\\sin x \\ll \\cos x\\) as \\(x \\to 0\\)\n\n\n\nIn the examination of limiting processes, often the main issue of consideration is the relative sizes of quantities defined according to their powers. For example, if \\(x\\) is a very small number, with \\(x = 10^{-5}\\), then \\(x^5\\) is much smaller than \\(x\\) (in terms of our notation, \\(x^5 \\ll x\\) as \\(x \\to 0\\)). On the other hand, we might not care so much about the difference between \\[\nx^5 \\quad \\text{vs.} \\quad 5 x^5\n\\] The point is that the of \\(x^5\\) and \\(5 x^5\\) is the same as \\(x \\to 0\\). The “Big-Oh” notation formalises this distinction.\n\n\n\n\n\n\nDefinition of Big-Oh\n\n\n\nWe write \\(f = O(g)\\) as \\(x \\to x_0\\) to mean that there exists constants \\(K &gt; 0\\) and \\(x^* &gt; 0\\) such that \\[\n|f| &lt; K |g| \\quad \\text{for all $|x - x_0| &lt; x^*$}.\n\\]\n\n\nIn practice, the use of the order symbol is very natural and you will not need to work with the technical definition. For example, when you derive the terms of the Maclaurin/Taylor series, you are naturally clustering all the terms of the same order (power) together. For us, the \\(O\\) symbol provides a very convenient way of separating terms of different sizes.\n\n\n\n\n\n\nExamples\n\n\n\n\n\\(2\\sin x = O(\\tan x)\\) as \\(x \\to 0\\)\n\\(x^2 + x + 1 = O\\left(\\dfrac{5x^3 + \\sin x}{1 + x}\\right)\\) as \\(x \\to \\infty\\)\n\n\n\nLet us return to the case of the quadratic example (Equation 5.1). Using the O notation, we can write \\[\nx =\n\\begin{cases}\n1 - \\epsilon + 2 \\epsilon^2 + O(\\epsilon^3) \\\\\n-\\frac{1}{\\epsilon} - 1 + O(\\epsilon^2)\n\\end{cases}\n\\] for the two roots. Alternatively, we can truncate the expansions and simply using the \\(\\sim\\) symbol: \\[\nx \\sim\n\\begin{cases}\n1 - \\epsilon  \\\\\n-\\frac{1}{\\epsilon} - 1\n\\end{cases}\n\\]",
    "crumbs": [
      "Practical applied mathematics",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Asymptotic approximations I</span>"
    ]
  },
  {
    "objectID": "part-05-techniques/asymptotics02.html",
    "href": "part-05-techniques/asymptotics02.html",
    "title": "6  Asymptotic approximations II",
    "section": "",
    "text": "6.1 Returning to the projectile problem\nIn the previous chapter, we learned about the technique of asymptotic expansions, whereby the solution of an equation is expressed in terms of a series in powers of a small parameter: \\[\nx = x_0 + \\epsilon x_1 + \\epsilon^2 x_2 + \\ldots\n\\] The precise choice of power progression (here integer powers of \\(\\epsilon\\) will depend on the particular problem. The same idea can be extended to approximating solutions of differential equations. The upshot of this procedure is that at each order of the scheme, a simpler problem can be studied.\nAgain it is best to demonstrate through examples.\nIn ?sec-pclass1 and Chapter 9 you studied the non-dimensionalisation of the projectile problem. Once re-scaled, it takes the following form: \\[\n\\begin{aligned}\n\\frac{\\mathrm{d}^2 y}{\\mathrm{d}t^2} &= -\\frac{1}{(1 + \\epsilon y)^2}, \\qquad t &gt; 0 \\\\\ny(0) &= 0, \\\\\ny'(0) &= 1.\n\\end{aligned}\n\\tag{6.1}\\]\nThis is a difficult problem without, in fact, any explicit solutions. However, we can estimate the solution in the limit \\(\\epsilon \\to 0\\). We expand the solution as \\[\ny(t) = y_0(t) + \\epsilon y_1(t) + \\epsilon^2 y_2(t) + \\ldots\n\\] In order to expand the denominator, you can use Taylor’s theorem to expand the function \\[\nf(x) = (1 + x)^\\alpha = f(0) + f'(0)x + \\ldots = 1 + \\alpha x + \\ldots\n\\] around \\(x = 0\\).\nThe differential equation now yields \\[\ny_0'' + \\epsilon y_1'' + \\epsilon^2 y_2'' + \\ldots = -\\left[1 - 2\\epsilon \\left(y_0 + \\epsilon y_1 + \\ldots\\right) + \\ldots \\right]\n\\] so grouping terms together order-by-order yields \\[\n\\Bigl[ y_0'' + 1 \\Bigr] + \\epsilon \\Bigl[ y_1'' - 2y_0\\Bigr] + \\ldots = 0.\n\\]\nWe can similarly substitute the expansion into the initial conditions. Altogether, at leading order, we obtain the following system to solve: \\[\n\\begin{aligned}\ny_0'' + 1 &= 0, \\\\\ny_0(0) &= 0, \\\\\ny_0'(0) &= 1.\n\\end{aligned}\n\\] Integrating twice and applying the boundary conditions gives us \\[\ny_0(t) = -\\frac{1}{2}t^2 + t.\n\\] In fact, this is simply the parabolic motion you would expect from school Physics. The \\(\\epsilon = 0\\) solution corresponds to assuming that the mass at the centre of the planet is dominant and then acceleration is constant.\nHowever, we can now proceed to higher order and examine the nonlinear effects. Proceeding to \\(O(\\epsilon)\\), we have the following system to solve: \\[\n\\begin{aligned}\ny_1'' &= 2y_0, \\\\\ny_1(0) &= 0, \\\\\ny_1'(0) &= 0.\n\\end{aligned}\n\\] Notice the boundary conditions come from the fact there are no \\(\\epsilon\\) corrections in the original boundary conditions, so \\(y_n(0) = y_n'(0) = 0\\) for all \\(n &gt; 0\\). Again this system is simple to integrate. Integrating the solution for \\(y_0\\) twice and substitution of the initial conditions yields \\[\ny_1(t) = -\\frac{1}{12}t^4 + \\frac{1}{3}t^3.\n\\] We have thus solved for the asymptotic approximation to two orders. We have \\[\ny(t) \\sim \\Bigl[ -\\frac{1}{2}t^2 + t\\Bigr] + \\epsilon \\Bigl[ -\\frac{1}{12}t^4 + \\frac{1}{3}t^3\\Bigr].\n\\] This was quite an accomplishment! We have taken a problem that was not easily solvable in explicit form and through fairly simple integrations, obtained an approximation to two orders in \\(\\epsilon\\). How good is it? Let us solve the problem numerically and compare with the asymptotic approximation.",
    "crumbs": [
      "Practical applied mathematics",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Asymptotic approximations II</span>"
    ]
  },
  {
    "objectID": "part-05-techniques/asymptotics02.html#sec-asym2-num",
    "href": "part-05-techniques/asymptotics02.html#sec-asym2-num",
    "title": "6  Asymptotic approximations II",
    "section": "6.2 Numerical solutions of IVPs",
    "text": "6.2 Numerical solutions of IVPs\n\\(\\nextSection\\)\nWe first demonstrate how to solve ODEs (initial-value-problems, IVPs) using black-box functions in Python. For starters, most numerical formulations for ODEs will require that the problem be posed in terms of a first-order system of equations. To convert (Equation 6.1) into such a form, create a set of unknowns for the derivatives. Set \\[\n\\mathbf{Y}(t) =\n\\begin{pmatrix}\ny_1(t) \\\\\ny_2(t)\n\\end{pmatrix}\n= \\begin{pmatrix}\ny(t) \\\\\ny'(t)\n\\end{pmatrix}\n\\]\nThen we have the following first-order system:\n\\[\n\\begin{aligned}\n\\mathbf{Y}'(t) &= \\mathbf{F}(t, \\mathbf{Y}(t)) = \\begin{pmatrix}\ny_1' \\\\\n- \\frac{1}{(1 + \\epsilon y_1)^2}\n\\end{pmatrix} \\\\\n\\mathbf{Y}(0) &= \\begin{pmatrix}\n0 \\\\\n1\n\\end{pmatrix}\n\\end{aligned}\n\\tag{6.2}\\]\nYou can find a little guide on using solve_ivp in Python here. Here is the Python code to solve the differential equation.\n\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom scipy.integrate import solve_ivp\n\nep = 0.2 # epsilon value\ntmax = 2 # max time\nt = np.linspace(0, tmax, 100) # mesh used for plotting\n\n# Define function for the ODE\ndef f(t, Y):\n    ep = 0.2\n    y, yp = Y\n    ypp = -1/(1 + ep*y)**2\n    return [yp, ypp]\n\n# define the initial condition\nY0 = [0, 1]\n\nsol = solve_ivp(f, [0, tmax], Y0, dense_output=True)\n\n# Prior to plotting, re-interpolate solution on a fine grid\nyy = sol.sol(t)\n# Asymptotic solutions\ny0 = -1/2*t**2 + t\ny1 = -1/12*t**4 + 1/3*t**3\n\n# Plot it all\nplt.plot(t, yy[0,])\nplt.plot(t, y0, '--')\nplt.plot(t, y0 + ep*y1, '--')\nplt.xlabel('t')\nplt.ylabel('y(t)')\n\nText(0, 0.5, 'y(t)')\n\n\n\n\n\n\n\n\n\nThe two-term approximation does beautifully well, even at this moderate value of \\(\\epsilon = 0.2\\).",
    "crumbs": [
      "Practical applied mathematics",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Asymptotic approximations II</span>"
    ]
  },
  {
    "objectID": "part-05-techniques/euler.html",
    "href": "part-05-techniques/euler.html",
    "title": "7  Numerical solutions of IVPs",
    "section": "",
    "text": "In the previous section, we used built-in ODE solvers to develop numerical solutions. It is important to gain an understanding how a simple ODE solver works. The simplest scheme is called Euler’s method, and this we now explain.\nBegin from the system (Equation 6.2). We assume that the solution is represented by a discrete set of points, \\(\\mathbf{Y}_n = \\mathbf{Y}(t_n)\\) at the times \\(t_0 = 0\\), \\(t_1 = \\Delta t\\), \\(t_2 = 2\\Delta t\\), and so on. The time derivative is written as a discrete derivative while we approximate the right hand side by its value at the nth time step: \\[\n\\frac{\\mathbf{Y}_{n+1} - \\mathbf{Y}_{n}}{\\Delta t} = \\mathbf{F}(t_n, \\mathbf{Y}_n)\n\\]\nRearranging yields a very simple algorithm for solving the ODE: \\[\n\\mathbf{Y}_{n} = \\mathbf{Y}_{n-1} + \\mathbf{F}(t_{n-1}, \\mathbf{Y}_{n-1}) \\Delta t\n\\] for \\(n = 1, 2, 3, \\ldots\\)\nThis would be implemented via the following pseudocode:\n\n\n\n\n\n\nEuler’s method\n\n\n\n1. Input: function f(t, Y)  \n            time step, dt\n            initial condition, Y0\n\n2. Set initial condition Y = Y0\n\n2. Take one Euler step and overwrite previous value\n\n                 Y = Y + f(t, Y)\n\n3. Increment t by dt and goto 2\n\n\nEuler’s method is conceptually simple but quite inaccurate. But in this case, we see that it works fairly well in comparison to the built-in solvers.\n\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom scipy.integrate import solve_ivp\n\nep = 0.2            # epsilon value\ntmax = 2            # max time\nN = 20              # number of steps\nt = np.linspace(0, tmax, N) # mesh used for plotting\ndt = t[1] - t[0]\n\n# Define function for the ODE\ndef f(t, Y, ep):\n    y, yp = Y\n    ypp = -1/(1 + ep*y)**2\n    return np.array([yp, ypp])\n\n# define the initial condition\nY = [0.0, 1.0]\nti = 0\n\n# define the solution vector\nfor i in range(1, N):\n    ti = ti + dt  # Increment time\n    Y = Y + f(ti, Y, ep)*dt # Euler step\n    plt.plot(ti, Y[0], 'k.')\n\n# Asymptotic solutions\ny0 = -1/2*t**2 + t\ny1 = -1/12*t**4 + 1/3*t**3\nplt.plot(t, y0, '--')\nplt.plot(t, y0 + ep*y1, '--')\nplt.xlabel('t');\nplt.ylabel('y');",
    "crumbs": [
      "Practical applied mathematics",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Numerical solutions of IVPs</span>"
    ]
  },
  {
    "objectID": "part-05-techniques/asymptotics03.html",
    "href": "part-05-techniques/asymptotics03.html",
    "title": "8  Asymptotic approximations III",
    "section": "",
    "text": "8.1 Regular vs. singular problems\nIn Chapter 6, we studied how asymptotic expansions can be used to approximate equations like \\[\n\\frac{\\mathrm{d}^2 y}{\\mathrm{d}t^2} = -\\frac{1}{(1 + \\epsilon y)^2}\n\\] by expanding the solution as \\(y(t) = y_0(t) + \\epsilon y_1(t) + \\ldots\\). These are known as regular problems because a small perturbation, \\(\\epsilon\\), does not seem to fundamentally change the \\(\\epsilon = 0\\) solution beyond a small perturbation. This is not always the case. In singular problems, the situation of \\(\\epsilon \\neq 0\\) is fundamentally different than the situation from \\(\\epsilon = 0\\). You have already seen such an example in Chapter 5. The equation \\[\n\\epsilon x^2 + x - 1 = 0\n\\] has one root for \\(\\epsilon = 0\\) and two roots for non-zero small \\(\\epsilon\\)—even infinitesimally small values! This is quite interesting. From a wider scientific perspective, you may wonder what other problems in nature possess such singular effects.\nThe point of this lecture is study a technique known as matched asymptotics. These matched asymptotics are often necessary for singularly perturbed differential equations.",
    "crumbs": [
      "Practical applied mathematics",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Asymptotic approximations III</span>"
    ]
  },
  {
    "objectID": "part-05-techniques/asymptotics03.html#a-singular-first-order-ode-problem",
    "href": "part-05-techniques/asymptotics03.html#a-singular-first-order-ode-problem",
    "title": "8  Asymptotic approximations III",
    "section": "8.2 A singular first-order ODE problem",
    "text": "8.2 A singular first-order ODE problem\n\\(\\nextSection\\)\nPreviously in Chapter 4, we derived a basic equation that governs the temperature on the surface of the planet. This equation had the following form: \\[\n(\\rho c_p V) \\frac{\\mathrm{d}T}{\\mathrm{d}t} = E_{\\text{in}}(t, T) - E_{\\text{out}}(t, T).\n\\]\nFor the purpose of this section, let us make up a toy model. We suggest, in non-dimensional form, \\[\n\\begin{aligned}\n\\epsilon \\frac{\\mathrm{d}T}{\\mathrm{d}t} &= R(t) - T, \\quad t \\geq 0 \\\\\nT(0) &= T^*,\n\\end{aligned}\n\\tag{8.1}\\] where we consider \\(\\epsilon &gt; 0\\) and \\(\\epsilon \\ll 1\\). You can think of the above model as modelling the temperature on a substance that radiates heat in a fashion proportional to itself (\\(-T\\)) and is being subjected to an (incoming) heat source, \\(R\\). Let us take as an example, \\[\nR(t) = 1 + A \\cos(t).\n\\] Our choice for \\(R\\) is not so important. This equation is, in fact, solvable in closed form (how?) but let us get additional practice solving numerically.\n\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom scipy.integrate import solve_ivp\n\nTs = 0\nep = 0.2\nA = 0.1\nf = lambda t, T: 1/ep*(1 + A*np.cos(t) - T)\n\ntmax = 50\nsol = solve_ivp(f, [0, tmax], [Ts], dense_output=True)\n\nt = np.linspace(0, tmax, 1000)\ny = sol.sol(t)\nplt.plot(t, y[0])\nplt.plot(t, 1 + A*np.cos(t), '--')\n\n\n\n\n\n\n\n\nWhat do we observe? If \\(\\epsilon = 0\\), then we expect the solution \\(T \\sim R(t)\\). This is shown with the dashed line. However, this solution does not satisfy the necessary initial condition. We observe that near \\(t = 0\\), the exact solution seems to very rapidly diverge from the approximation in order to satisfy the proper boundary condition. The region in \\(t\\) where this rapid change occurs is called a boundary layer.\nIf we repeat the experiment with an even smaller value of \\(\\epsilon\\), we would observe that the size of this boundary layer seems to tends to zero as \\(\\epsilon \\to 0\\). This numerical experiment thus inspires the following method.",
    "crumbs": [
      "Practical applied mathematics",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Asymptotic approximations III</span>"
    ]
  },
  {
    "objectID": "part-05-techniques/asymptotics03.html#boundary-layer-theory",
    "href": "part-05-techniques/asymptotics03.html#boundary-layer-theory",
    "title": "8  Asymptotic approximations III",
    "section": "8.3 Boundary layer theory",
    "text": "8.3 Boundary layer theory\n\\(\\nextSection\\)\nWe seek a method that will allow us to develop a uniformly valid approximation, i.e. an approximation that is good everywhere in the relevant domain, \\(t \\geq 0\\). Begin by performing the usual asymptotic approximation: \\[\nT(t) = T_0(t) + \\epsilon T_1(t) + \\epsilon^2 T_2(t) + \\ldots\n\\] Substitution into the ODE (Equation 8.1) yields at leading order, \\[\n0 = R(t) - T_0(t) \\Longrightarrow T_0(t) = R(t) = 1 + A \\cos(t).\n\\] As we have noted, this approximation fails to satisfy the initial condition, \\(T(0) = T^*\\) in general. It is possible to go to higher order but this is not so important at the moment. So for now, we have obtained: \\[\nT_{\\text{outer}} \\sim \\Bigl[ 1 + A\\cos t\\Bigr].\n\\] We have chosen to refer to this as the outer solution for reasons that will be abundantly clear. But rather than satisfying \\(T(0) = T^*\\), this approximation has the limiting behaviour of \\[\n\\lim_{t \\to 0} T_{\\text{outer}} \\sim \\Bigl[ 1 + A\\Bigr]\n\\] Above, we have only included the leading term in the limit expression.\n\n8.3.1 The inner scaling\n\\(\\nextSection\\)\nOur intuition follows a very similar logic to the examination of the singular root in Section 5.1.1. Above, our naive assumption was that \\(\\epsilon T'(t)\\) could be ignored since \\(\\epsilon\\) is a small number. However, this may not be the case if the gradient is very large.\nOur intuition further suggests that the boundary layer occurs near \\(t = 0\\) and that it scales in size with \\(\\epsilon\\). Therefore, let us set \\[\nt = \\epsilon^{\\alpha} s,\n\\] as a change of coordinates. We expect \\(\\alpha &gt; 0\\) (otherwise \\(t\\) is not small), and within this region, we expect the new coordinate, \\(s\\), to be \\(O(1)\\) (of moderate size). We then transform the unknown function: \\[\nT(t) = T(\\epsilon s) = U(s),\n\\] and seek a new differential equation for \\(U\\). By the chain rule, \\[\n\\frac{\\mathrm{d}T}{\\mathrm{d}t} = \\epsilon^{-\\alpha} \\frac{\\mathrm{d}U}{\\mathrm{d}s}.\n\\] Before substituting into the equation, we are prudent to examine the behaviour of \\(R(t)\\) near \\(t = 0\\). We know by Taylor’s theorem that \\[\nR(t) = 1 + A \\left(1 - \\frac{t^2}{2} + \\ldots \\right).\n\\] Therefore, under the substitution, we may approximate \\(R\\) by its leading terms: \\[\nR( \\epsilon^{\\alpha} s) \\sim 1 + A.\n\\] For now, we will not need more terms than this. Substituting into the ODE now gives \\[\n\\epsilon^{1-\\alpha} \\frac{\\mathrm{d}U}{\\mathrm{d}s} \\sim \\Bigl[1 + A\\Bigr] - U.\n\\] Now in order to involve the first term, it is sensible to select \\[\n1 - \\alpha = 0 \\Longrightarrow \\alpha = 1.\n\\]\n\n\n8.3.2 The inner equation\n\\(\\nextSection\\)\nTherefore, the correct coordinate re-scaling was the ‘obvious’ one: \\[\nt = \\epsilon s.\n\\]\nSubstituting this again in (Equation 8.1): \\[\n\\begin{aligned}\n\\frac{\\mathrm{d}U}{\\mathrm{d}s} &= 1 + A\\cos(\\epsilon s) - U, \\\\\nU(0) &= T^*.\n\\end{aligned}\n\\]\nThe procedure is now exactly the same. We expand \\[\nU(s) = U_0(s) + \\epsilon U_1(s) + \\epsilon^2 U_2(s) + \\ldots\n\\] At leading order, we get \\[\n\\begin{aligned}\nU_0' &= 1 + A - U_0 \\\\\nU_0(0) &= T^*.\n\\end{aligned}\n\\]\nThe above ODE can be solved by integrating factors. Multiplying both sides be \\(e^s\\), we have \\[\n(U_0 e^s)' = (1 + A)e^s.\n\\] Integrate and use the initial condition: \\[\nU_0(s) = (1 + A) + (T^* - (1 +A))e^{-s}.\n\\] This is exactly what we expect. Notice that \\[\n\\lim_{s \\to \\infty} U_0(s) = \\lim_{t \\to 0} T_{\\text{outer}}\n\\tag{8.2}\\] therefore the outer limit of our inner solution matches the inner limit of our outer solution. In terms of outer coordinates, our inner solution is approximated as follows: \\[\nT_{\\text{inner}} \\sim (1 + A) + (T^* - (1 +A))e^{-t/\\epsilon}.\n\\]\nLet’s finally plot this with our previous curves:\n\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom scipy.integrate import solve_ivp\n\nTs = 0\nep = 0.2\nA = 0.1\nf = lambda t, T: 1/ep*(1 + A*np.cos(t) - T)\n\ntmax = 20\nsol = solve_ivp(f, [0, tmax], [Ts], dense_output=True)\n\nt = np.linspace(0, tmax, 1000)\ny = sol.sol(t)\nplt.plot(t, y[0])\nplt.plot(t, 1 + A*np.cos(t), '--')\nplt.plot(t, (1 + A) + (Ts - (1 + A))*np.exp(-t/ep), '--')\n\n\n\n\n\n\n\n\nIt works beautifully!\n\n\n8.3.3 Summary\n\\(\\nextSection\\)\nLet us summarise the procedure of matched asymptotics.\n\nExpand the solution of the differential equation naively in the typical asymptotic expansion (e.g. in powers of \\(\\epsilon\\)).\nNotice that the approximation does not satisfy certain boundary conditions.\nRe-scale the coordinates in the ‘inner’ regions.\nDevelop an inner solution that satisfies the boundary condition. Ensure it matches the outer solution.\n\nYou will get more practice of this procedure in the problem sets.",
    "crumbs": [
      "Practical applied mathematics",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Asymptotic approximations III</span>"
    ]
  },
  {
    "objectID": "part-xx-exercises/ps01.html",
    "href": "part-xx-exercises/ps01.html",
    "title": "9  Problem set 1",
    "section": "",
    "text": "Q1. Bump lemma\nThe intention of this problem set is to practice concepts from material related to conservation laws and non-dimensionalisation. Although these concepts seem quite separate from “Maths of Planet Earth”, actually, they form important pillars of mathematical modelling.\nProve the following one-dimensional lemma, which was used in the derivation of the heat equation.\nIf \\(\\int_a^b g(x) \\, \\mathrm{d}x = 0\\) for all \\(a\\) and \\(b \\in [0, 1]\\), then \\(g(x) \\equiv 0\\) for all \\(x\\in [0, 1]\\).\nHint: think of a proof by contradiction.",
    "crumbs": [
      "Exercises",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Problem set 1</span>"
    ]
  },
  {
    "objectID": "part-xx-exercises/ps01.html#q2.-a-source-in-the-heat-equation",
    "href": "part-xx-exercises/ps01.html#q2.-a-source-in-the-heat-equation",
    "title": "9  Problem set 1",
    "section": "Q2. A source in the heat equation",
    "text": "Q2. A source in the heat equation\n\\(\\nextSection\\)\nConsider the same heat experiment discused in Chapter 2 but now consider a bar that has an internal source or sink generating or removing heat, such as the case of a boiler with an internal heating element. By adapting a similar derivation to the one presented, explain why the modified conservation of heat equation is \\[\n\\frac{\\mathrm{\\partial}}{\\mathrm{\\partial}t} \\int_a^b \\rho c T \\, \\mathrm{d}x = {\\color{blue}q(x = a, t) - q(x = b, t)} + \\int_a^b R(x, t) \\, \\mathrm{d}x.\n\\]\nIn addition:\n\nBy studying the dimensions of the other terms in the above equation, find what the dimensions of \\(R\\) are. What does \\(R &gt; 0\\) mean and \\(R &lt; 0\\)?\nHence derive the partial differential equation that governs the temperature \\(T\\).\nBy introducing the appropriate scalings on each of the variables, \\(x\\), \\(t\\), and \\(T\\), non-dimensionalise the PDE and discuss the non-dimensional parameters (there will be two).",
    "crumbs": [
      "Exercises",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Problem set 1</span>"
    ]
  },
  {
    "objectID": "part-xx-exercises/ps01.html#q3.-choice-of-scalings",
    "href": "part-xx-exercises/ps01.html#q3.-choice-of-scalings",
    "title": "9  Problem set 1",
    "section": "Q3. Choice of scalings",
    "text": "Q3. Choice of scalings\n\\(\\nextSection\\)\nConsider the dimensional problem for the motion of a projectile launched from close to the surface of the Earth. The dimensional height of the projectile, \\(y(t)\\), is given by \\[\n\\begin{aligned}\n\\frac{\\mathrm{d}^2 y}{\\mathrm{d}t^2} &= - \\frac{GM}{(R+y)^2}, \\\\\ny(0) &= 2 \\, \\mathrm{m}, \\\\\ny'(0) &= -V_0 \\, \\mathrm{m/s}.\n\\end{aligned}\n\\] Assume that the Earth is spherical and of uniform density, with its mass given by \\(M = (4/3) \\pi R^3 \\rho\\). Non-dimensionalise the height using \\(y = L \\tilde{y}\\) and time using \\(t = T\\tilde{t}\\). Consider the following cases:\n\n\\(R\\) fixed, \\(V_0 \\to \\infty\\), \\(\\rho\\) fixed;\n\\(R\\) fixed, \\(V_0\\) fixed, \\(\\rho \\to \\infty\\);\n\\(R\\) fixed, \\(V_0\\) fixed, \\(\\rho \\to 0\\);\n\\(R \\to 0\\), \\(V_0\\) fixed, \\(M\\) fixed.\n\nFor each case:\n\nExplain the physical interpretation of the limits.\nChoose the scalings \\(L\\) and \\(T\\) to normalise as many terms as possible.\nChoose the scalins so that the time it takes for the projectile to fall should be finite for the given limit, and for the speed, acceleration, and initial height to be well behaved (finite).\nWrite out the scaled problem and identify all remaining nondimensional parameters.\nIdentify the limiting small parameter for each case. Write out the problem (leading-order problem) when the parameter is set to zero.",
    "crumbs": [
      "Exercises",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Problem set 1</span>"
    ]
  },
  {
    "objectID": "part-xx-exercises/ps01.html#q4.-the-unique-timescale-in-the-heat-equation",
    "href": "part-xx-exercises/ps01.html#q4.-the-unique-timescale-in-the-heat-equation",
    "title": "9  Problem set 1",
    "section": "Q4. The unique timescale in the heat equation",
    "text": "Q4. The unique timescale in the heat equation\n\\(\\nextSection\\)\nDuring our investigation of the heat equation, we found that it was possible to scale time so as to scale out the only non-dimensional parameter that appears in the PDE (\\(\\Pi\\)). This produced (Equation 3.1). The disappearance of all non-dimensional parameters is due to the fact that only a single sensible timescale exists.\nBy adjusting the boundary conditions, we may create a new problem involving heat flow where a unique ‘special’ timescale can no longer be chosen.\nConsider a system where one side of the rod is heated in some periodic fashion, e.g. set the initial and boundary conditions to be \\[\n\\begin{aligned}\nT(x, 0) &= T_0 \\\\\nT(0, t) &= T_a \\cos (\\omega t), \\\\\nT(L, t) &= T_b.\n\\end{aligned}\n\\]\n\nWhat must the units of \\(\\omega\\) be?\nNon-dimensionalise as usual and, without selecting the timescale, \\([t]\\), identify the key non-dimensional parameters that remain. Write a brief sentence to describe their physical interpretation.\nThere are two sensible choices for setting the timescale, \\([t]\\). Identify the two choices and present the reduced set of equations in each case.",
    "crumbs": [
      "Exercises",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Problem set 1</span>"
    ]
  },
  {
    "objectID": "part-xx-exercises/ps01.html#q5.-timescale-in-the-surface-energy",
    "href": "part-xx-exercises/ps01.html#q5.-timescale-in-the-surface-energy",
    "title": "9  Problem set 1",
    "section": "Q5. Timescale in the surface energy",
    "text": "Q5. Timescale in the surface energy\n\\(\\nextSection\\)\nTake the basic zero-dimensional energy model studied in (Equation 4.7) for the temperature of the troposphere: \\[\nC \\frac{\\mathrm{d}T}{\\mathrm{d}t} = \\frac{1}{4} Q(1 - a) - \\sigma \\gamma T^4.\n\\]\n\nNon-dimensionalise the model by choosing \\(T = [T]T'\\), \\(t = [t]t'\\), and \\(Q = [Q]Q'\\). Show that it is possible to select the scalings on the temperature and time so as to completely remove all constants from the problem when \\(Q\\) is assumed to be constant.\nThus, show that the analysis of the above equation is equivalent to studying \\[\n\\frac{\\mathrm{d}T}{\\mathrm{d}t} = 1 - T^4,\n\\] where we have dropped the primes and assumed that the albedo is such that \\(1 - a \\neq 0\\).\nFrom your choice of \\([t]\\), estimate the typical dimensional value using \\(d \\approx 10 \\mathrm{km}\\), \\(\\rho \\approx 1 \\mathrm{kg} \\,\\mathrm{m}^{-3}\\), \\(c_p \\approx 10^3 \\mathrm{J} \\,\\mathrm{kg}^{-1} \\,\\mathrm{K}^{-1}\\).\n\nUse a pocket calculator to verify your calculations and conclude that this time-scale is on the order of a month. What is the relevance of this approximation as it concerns the steady-state solution?",
    "crumbs": [
      "Exercises",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Problem set 1</span>"
    ]
  },
  {
    "objectID": "part-xx-exercises/ps02.html",
    "href": "part-xx-exercises/ps02.html",
    "title": "10  Problem set 2",
    "section": "",
    "text": "10.1 Getting started with Noteable\nThe intention of this problem set is to practice concepts from Chapter 5 (asymptotic approximations of algebraic equations) to Chapter 7 (Euler’s method and numerical solutions of differential equations). These techniques form some of the most powerful techniques at your disposal in applied maths.\nUse your Moodle course page to access the Noteable Python interface by clicking on the appropriate link in the course materials. Follow the instructions on the Moodle page to add the Git repository to your directory.",
    "crumbs": [
      "Exercises",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Problem set 2</span>"
    ]
  },
  {
    "objectID": "part-xx-exercises/ps02.html#getting-started-with-noteable",
    "href": "part-xx-exercises/ps02.html#getting-started-with-noteable",
    "title": "10  Problem set 2",
    "section": "",
    "text": "Navigate to the welcome screen for MA30287 and follow the instructions in Welcome.ipynb and FirstTimeSetup.ipynb in order to create your own local directory at /MA30287_workspace/\nNavigate to the workspace folder. Click New -&gt; Notebook. If asked, select the kernel Python 3 (ipykernel).\nIn the first line of input, select, in toolbar Code -&gt; Markdown. This allows you to annotate your notebook with Markdown-style text input.\nIn the first line of input, type # Problem set 2. Then either type Shift + Enter or press the play button which will execute the line(s) of input. Your markdown text should render as a nicely formatted entry.\nRename the file to something appropriate, like ps02_scripts. You can do this by right-clicking the filename in the file manager and selecting Rename.\nProceed to the next question.",
    "crumbs": [
      "Exercises",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Problem set 2</span>"
    ]
  },
  {
    "objectID": "part-xx-exercises/ps02.html#sec-ps2-cubic",
    "href": "part-xx-exercises/ps02.html#sec-ps2-cubic",
    "title": "10  Problem set 2",
    "section": "10.2 Testing the solutions of a cubic",
    "text": "10.2 Testing the solutions of a cubic\n\\(\\nextSection\\)\nIn this question, you will develop the numerical solutions for the roots of the cubic equation: \\[\n\\epsilon x^3 - x + 1 = 0, \\qquad \\epsilon &gt; 0\n\\]\nType the following code into your Jupyter notebook. This code uses a command, which you will learn in a later week, called fsolve, in order to solve nonlinear equations. When writing the below code, you may want to separate the import commands into their own input field in the notebook.\n\nimport numpy as np\nfrom scipy.optimize import fsolve\n\nep = 0.1        # epsilon value\nxguess = 1.1    # Initial guess of root\n\nf = lambda x: ep*x**3 - x + 1\nxsol = fsolve(f, xguess)\nprint(\"Solved root at x = \", xsol)\n\nSolved root at x =  [1.15346731]",
    "crumbs": [
      "Exercises",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Problem set 2</span>"
    ]
  },
  {
    "objectID": "part-xx-exercises/ps02.html#analysis-of-singular-cubic-equation",
    "href": "part-xx-exercises/ps02.html#analysis-of-singular-cubic-equation",
    "title": "10  Problem set 2",
    "section": "10.3 Analysis of singular cubic equation",
    "text": "10.3 Analysis of singular cubic equation\n\\(\\nextSection\\)\nConsider the cubic equation \\[\n\\epsilon x^3 - x + 1 = 0,\n\\] with \\(\\epsilon \\ll 1\\) and \\(\\epsilon &gt; 0\\).\n\nDevelop the first three terms of an asymptotic expansion about the root by setting \\[\nx = x_0 + \\epsilon x_1 + \\epsilon^2 x_2 + \\ldots\n\\]\nFill out the following table.\n\n\n\n\\(\\epsilon\\)\n\\(x_{\\text{exact}}\\)\n\\(x_{\\text{exact}} - x_0\\)\n\n\n\n\n0.1\n–\n–\n\n\n0.08\n–\n–\n\n\n0.06\n–\n–\n\n\n0.04\n–\n–\n\n\n0.02\n–\n–\n\n\n\nUse your code in Section 10.2 to input numerical approximations to the above entries.\nCreate a graph by hand of the data (it does not have to be extremely accurate), as plotted in the \\((\\epsilon, x_{\\text{exact}} - x_0)\\)-plane. Fit a line to this graph and estimate the gradient. Is this consistent with what you derived above?\nBy rescaling \\(x\\) appropriately in terms of \\(\\epsilon\\), derive the first three terms of the asymptotic approximations of the remaining roots.",
    "crumbs": [
      "Exercises",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Problem set 2</span>"
    ]
  },
  {
    "objectID": "part-xx-exercises/ps02.html#a-damped-projectile-problem",
    "href": "part-xx-exercises/ps02.html#a-damped-projectile-problem",
    "title": "10  Problem set 2",
    "section": "10.4 A damped projectile problem",
    "text": "10.4 A damped projectile problem\n\\(\\nextSection\\)\nIn Chapter 6 you performed the asymptotic analysis for a projectile. The small parameter was \\(\\epsilon\\) and represented \\(v_0^2/(gR_E)\\) (a parameter that includes the initial velocity, \\(v_0\\), gravity \\(g\\), and the radius of the Earth, \\(R_E\\).\nIf air resistance is included, then the non-dimensional toy model is instead \\[\\begin{equation}\n\\begin{gathered}\n\\frac{\\mathrm{d}^2 y}{\\mathrm{d}t^2} = - \\frac{1}{(1 + \\epsilon y)^2} - \\frac{\\alpha}{(1 + \\epsilon y)} \\frac{\\mathrm{d}y}{\\mathrm{d}t}, \\\\\ny(0) = 0, \\\\\ny'(0) = 1.\n\\end{gathered}\n\\end{equation}\\] where \\(\\alpha \\geq 0\\) is the parameter that controls air resistance.\n\nBegin by assuming that \\(\\alpha\\) is a fixed number and consider the limit where \\(\\epsilon \\ll 1\\). Find a one-term asymptotic expansion of the solution for small \\(\\epsilon\\).\n(Challenging) Is the effect of the air resistance to increase or decrease the flight time? Justify based on your analytical solution.",
    "crumbs": [
      "Exercises",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Problem set 2</span>"
    ]
  },
  {
    "objectID": "part-xx-exercises/ps02.html#ode-solvers-and-eulers-method",
    "href": "part-xx-exercises/ps02.html#ode-solvers-and-eulers-method",
    "title": "10  Problem set 2",
    "section": "10.5 ODE solvers and Euler’s method",
    "text": "10.5 ODE solvers and Euler’s method\n\\(\\nextSection\\)\nReturn to the setup of the above question.\n\nModify the script shown in Section 6.2 in order to solve the initial-value problem from the previous question at a prescribed value of \\(\\epsilon\\) and \\(\\alpha\\).\nUsing a pocket calculator (or your phone calculator) apply Euler’s method with \\(\\Delta t = 0.2\\), \\(\\epsilon = 0.2\\), and \\(\\alpha = 1\\) to determine the position of the projectile at \\(t = 0.6\\).\nCompare your hand calculation with the result from the Python output, as well as with your asymptotic approximations.",
    "crumbs": [
      "Exercises",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Problem set 2</span>"
    ]
  },
  {
    "objectID": "part-xx-exercises/ps03.html",
    "href": "part-xx-exercises/ps03.html",
    "title": "11  Problem set 3",
    "section": "",
    "text": "Q1. Conversion to first-order system\nIn Chapter 8 we discussed how the zero-dimensional energy equation occurs in the form of \\[\n(\\rho c_p V) \\frac{\\mathrm{d}T}{\\mathrm{d}t} = E_{\\text{in}}(t, T) - E_{\\text{out}}(t, T).\n\\] This is oversimplistic since in actuality, your temperature function, \\(T\\), should also depend on space. For instance, if you are interested in modelling \\(T\\) with a depth coordinate, then it would be \\(T(z, t)\\). In this case, we know that temperature would be governed by a second-order differential equation (in space) such as the kind that appears in (Equation 2.1).\nIn this problem set, we will make up a toy example of a differential equation that might be encountered in heat flow. Consider now (in non-dimensional coordinates): \\[\n\\frac{\\mathrm{\\partial}T}{\\mathrm{\\partial}t} = \\epsilon \\frac{\\mathrm{\\partial}^2 T}{\\mathrm{\\partial}z^2} + 2 \\frac{\\mathrm{\\partial}T}{\\mathrm{\\partial}z} + T = 0,\n\\] which is determined for some function \\(T(z, t)\\). Here, the small parameter \\(\\epsilon &gt; 0\\), \\(\\epsilon \\ll 1\\), is linked to the heat diffusion.\nWe will study the steady-state version of the problem. So consider only \\(T = T(z)\\). We will make up some boundary conditions as well. \\[\n\\begin{aligned}\n\\epsilon T'' + 2T' + T &= 0, \\\\\nT(0) &= 0, \\\\\nT(1) &= 1.\n\\end{aligned}\n\\tag{11.1}\\] The challenge is to study the above problem for small values of \\(\\epsilon\\).\nBy using the procedure reviewed in Section 6.2, convert (Equation 11.1) to a first-order system of equations.",
    "crumbs": [
      "Exercises",
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Problem set 3</span>"
    ]
  },
  {
    "objectID": "part-xx-exercises/ps03.html#q2.-numerical-solutions",
    "href": "part-xx-exercises/ps03.html#q2.-numerical-solutions",
    "title": "11  Problem set 3",
    "section": "Q2. Numerical solutions",
    "text": "Q2. Numerical solutions\n\\(\\nextSection\\)\nBy adapting the code studied in lectures (script lecture12-SolvingBVPs), write a numerical code to solve (Equation 11.1) using Python’s built-in functions. Use your code to investigate the solution profiles for different values of \\(\\epsilon\\).",
    "crumbs": [
      "Exercises",
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Problem set 3</span>"
    ]
  },
  {
    "objectID": "part-xx-exercises/ps03.html#q3.-investigation-of-the-boundary-layer",
    "href": "part-xx-exercises/ps03.html#q3.-investigation-of-the-boundary-layer",
    "title": "11  Problem set 3",
    "section": "Q3. Investigation of the boundary layer",
    "text": "Q3. Investigation of the boundary layer\n\\(\\nextSection\\)\nUsing your code, use the following command in order to investigate the maxima \\((x_m, T_m)\\) as \\(\\epsilon\\) varies:\nind = np.argmax(Y[0])\nprint(ep, z[ind], Y[0, ind])\nYou may want to consider, as an example, the values \\(\\epsilon = \\{0.05, 0.1, 0.15, 0.2\\}\\) and fill the following table.\n\n\n\n\\(\\epsilon\\)\n\\(x_m\\)\n\\(T_m\\)\n\n\n\n\n0.05\n\n\n\n\n0.1\n\n\n\n\n0.15\n\n\n\n\n0.2\n\n\n\n\n\nCreate a plot of \\((\\epsilon, x_m)\\) and discuss the observed trend and its implications.",
    "crumbs": [
      "Exercises",
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Problem set 3</span>"
    ]
  },
  {
    "objectID": "part-xx-exercises/ps03.html#q4.-outer-asymptotic-solutions",
    "href": "part-xx-exercises/ps03.html#q4.-outer-asymptotic-solutions",
    "title": "11  Problem set 3",
    "section": "Q4. Outer asymptotic solutions",
    "text": "Q4. Outer asymptotic solutions\n\\(\\nextSection\\)\nBegin by setting \\[\nT = T_{\\text{outer}} = T_0(z) + \\epsilon T_1(z) + \\epsilon^2 T_2(z) + \\ldots\n\\] Substitute the above expansion into the system and solve for the first two orders.\nYou may verify that the solution is given by\n\\[\\begin{align}\nT_0 &= e^{1/2} e^{-z/2}, \\\\\nT_1 &= -\\frac{1}{8} e^{1/2} e^{-z/2} (z - 1).\n\\end{align}\\]",
    "crumbs": [
      "Exercises",
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Problem set 3</span>"
    ]
  },
  {
    "objectID": "part-xx-exercises/ps03.html#q5.-inner-asymptotic-solutions",
    "href": "part-xx-exercises/ps03.html#q5.-inner-asymptotic-solutions",
    "title": "11  Problem set 3",
    "section": "Q5. Inner asymptotic solutions",
    "text": "Q5. Inner asymptotic solutions\n\\(\\nextSection\\)\nThere will be a boundary layer near \\(z = 0\\). Set \\(z = \\epsilon^{\\alpha} s\\) and \\(T(z) = U(s)\\). Follow the same procedure, as in Chapter 8 in order to determine the correct choice of \\(\\alpha\\) for the inner region. This choice should balance the two terms \\(\\epsilon T''\\) and \\(2T'\\).",
    "crumbs": [
      "Exercises",
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Problem set 3</span>"
    ]
  },
  {
    "objectID": "part-xx-exercises/ps03.html#q6.-matching-and-comparison",
    "href": "part-xx-exercises/ps03.html#q6.-matching-and-comparison",
    "title": "11  Problem set 3",
    "section": "Q6. Matching and comparison",
    "text": "Q6. Matching and comparison\n\\(\\nextSection\\)\nExpanding the inner solution as \\(U = U_0(s) + \\epsilon U_1(s) + \\ldots\\), write down the equation and boundary conditions that \\(U_0\\) must satisfy. You will notice that \\(U_0\\) is governed by a second-order differential equation and therefore needs two boundary conditions. One boundary condition comes from \\(z = 0\\), i.e. \\[\nU_0(0) = 0.\n\\]\nThe other boundary condition is a matching condition: \\[\n\\lim_{s \\to \\infty} U_0(s) = \\lim_{z \\to 0} T_0(z),\n\\] which imposes that the inner solution, as it leaves the boundary layer, matches the outer solution, it tends into the inner region.\nSolve for \\(U_0\\).",
    "crumbs": [
      "Exercises",
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Problem set 3</span>"
    ]
  },
  {
    "objectID": "part-xx-exercises/ps04.html",
    "href": "part-xx-exercises/ps04.html",
    "title": "12  Problem set 4",
    "section": "",
    "text": "Q1. Budyko’s model\nThis problem set focuses on EBMs.\nPreviously we derived the energy for outgoing radiation as: \\[\nE_{\\text{out}}(T) = \\sigma \\gamma T^4,\n\\] which is estimated via the Stefan-Boltzmann law. Budyko’s approximation replaces this law with a linear relationship.",
    "crumbs": [
      "Exercises",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Problem set 4</span>"
    ]
  },
  {
    "objectID": "part-xx-exercises/ps04.html#q1.-budykos-model",
    "href": "part-xx-exercises/ps04.html#q1.-budykos-model",
    "title": "12  Problem set 4",
    "section": "",
    "text": "Assume that \\[\nT = T_0 + \\bar{T},\n\\] where \\(T_0 = 273.15 \\, \\mathrm{K}\\), which corresponds to \\(0^\\circ \\, \\mathrm{C}\\). We can consider \\(\\bar{T}\\) as measured in Celcius (since conversion between Kelvins and Celcius is directly proportional). Substitute the above into \\(E_{\\text{out}}\\) and linearise, thus assuming \\(\\bar{T}\\) is near zero. Place the energy in the form \\[\nE_{\\text{out}} \\sim A + B\\bar{T}.\n\\] Using the standard value of \\(\\sigma = 5.67 \\times 10^{-8}\\) W/m2 K4 and \\(\\gamma = 1\\), calculate the values of \\(A\\) and \\(B\\).\nRather than use the formal values derived above, the standard Budyko model uses values of \\(A = 203.3 \\mathrm{W}/\\mathrm{m}^2\\) and \\(B = 2.09 \\, \\mathrm{W}/(\\mathrm{m}^2 {}^\\circ \\mathrm{C})\\) that are found from best fit with observational data.\nUsing Jupyter and a short script for numerical root finding, investigate the equilibrium solutions of \\[\nQ(1 - a(T_0 + \\bar{T})) = A + B \\bar{T}.\n\\] where \\(Q = 342 \\, \\mathrm{W}/\\mathrm{m}^2\\) and \\(a(T)\\) is given from (?eq-albedokaper). Where are the equilibrium solutions, \\(\\bar{T^*}\\), and how do they compare with those obtained previously using the Stefan-Boltzmann relation?",
    "crumbs": [
      "Exercises",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Problem set 4</span>"
    ]
  },
  {
    "objectID": "part-xx-exercises/ps04.html#q2.-variable-sun-output",
    "href": "part-xx-exercises/ps04.html#q2.-variable-sun-output",
    "title": "12  Problem set 4",
    "section": "Q2. Variable Sun output",
    "text": "Q2. Variable Sun output\n\\(\\nextSection\\)\nSatellite data indicates that \\(Q\\), varies roughly between 341.37 W/m2 and 341.75 W/m2, with a period of about 11 years.\n\nUse the simple EBM (?eq-energy-ss), given by \\[\nQ(1 - a) = \\sigma \\gamma T^4,\n\\] with a constant albedo, \\(a = 0.3\\) and greenhouse gas factor \\(\\gamma = 0.6\\) to estimate the resultant variation (max and min) in the Earth’s mean surface temperature \\(T\\).\nSimilar to (a) but this time, use the Budyko balance equation, \\[\nQ(1 - a) = A + BT\n\\] with \\(A = 203.3 \\, \\mathrm{W} \\mathrm{m}^{-2}\\) and \\(B = 2.09 \\, \\mathrm{W}/(\\mathrm{m}^{2} \\, {}^\\circ \\mathrm{C})\\) to estimate the resultant variation in the surface temperature. Use \\(a = 0.3\\).\nThe actual variation in surface temperature is in fact less than what you computed above. Why might this be?",
    "crumbs": [
      "Exercises",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Problem set 4</span>"
    ]
  },
  {
    "objectID": "part-xx-exercises/ps04.html#q3.-phase-line-analysis",
    "href": "part-xx-exercises/ps04.html#q3.-phase-line-analysis",
    "title": "12  Problem set 4",
    "section": "Q3. Phase line analysis",
    "text": "Q3. Phase line analysis\n\\(\\nextSection\\)\nConsider the energy balance equation \\[\nC \\frac{\\mathrm{d}T}{\\mathrm{d}t} = Q(1 - a(T)) - \\sigma \\gamma T^4 \\equiv G(T).\n\\tag{12.1}\\] with \\(a\\) given by (?eq-albedokaper). Because the differential equation is autonomous, we can apply phase-line analysis in order to qualitatively understand the evolution. Below is a plot of the function \\(G\\):\n\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nQ = 342; sigma = 5.67e-8; gam = 0.6;\na = lambda T: 0.5 - 0.2*np.tanh(0.1*(T-265));\nT = np.linspace(220, 310, 100);\nG = Q*(1-a(T)) - sigma*gam*T**4\nfig, ax = plt.subplots()\nax.plot(T, G)\nax.grid(); ax.minorticks_on();\n# Customize the major grid\nax.grid(which='major', linestyle='-', linewidth='0.5', color='red')\n# Customize the minor grid\nax.grid(which='minor', linestyle=':', linewidth='0.5', color='black')\nplt.xlabel('T (in Kelvins)'); plt.ylabel('G(T)');\n\n\n\n\n\n\n\n\n\nSketch the solution \\(T(t)\\) of this equation for \\(t &gt; 0\\) if \\(T(0) = 230, 240, 260, 270\\) and \\(300\\).\nSketch the solution \\(T(t)\\) of this equation for \\(t &gt; 0\\) if \\(T(0) = 285\\). Then sketch the solution of this equation with the same initial data in the same coordinate system if \\(C\\) is twice as large. Explain your answer.\nIf \\(\\gamma\\) is decreased due to the increased greenhouse effect, the entire curve is shifted upwards. Sketch the solution if \\(T(0) = 280\\). Sketch the solution with the same initial data if \\(\\gamma\\) is decreased. Explain your answer.",
    "crumbs": [
      "Exercises",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Problem set 4</span>"
    ]
  },
  {
    "objectID": "part-xx-exercises/ps04.html#q4.-evolution",
    "href": "part-xx-exercises/ps04.html#q4.-evolution",
    "title": "12  Problem set 4",
    "section": "Q4. Evolution",
    "text": "Q4. Evolution\n\\(\\nextSection\\)\nConsider again (Equation 12.1). Let \\(T^*\\) be a steady-state solution and set \\(T = T^* + u(t)\\) where \\(u(t)\\) is a small perturbation from the steady state.\n\nShow that the perturbation satisfies \\[\nC \\dot{u} = -D u + O(u^2).\n\\] and hence solve for the general solution of the leading-order perturbation (ignoring quadratic terms). What are the conditions on \\(T^*\\) so that the steady state is linearly stable?\nAssuming \\(T^*\\) is linearly stable, find the typical response time to a perturbation. For instance, what is the time it takes for the perturbation to reach the value \\(u(t) = 0\\) if \\(u(0) = 1\\)? How does this response time change with \\(C\\)? What is the physical interpretation of this regarding the climate?",
    "crumbs": [
      "Exercises",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Problem set 4</span>"
    ]
  },
  {
    "objectID": "part-xx-exercises/ps04.html#q5.-integral-of-energy-over-the-planet",
    "href": "part-xx-exercises/ps04.html#q5.-integral-of-energy-over-the-planet",
    "title": "12  Problem set 4",
    "section": "Q5. Integral of energy over the planet",
    "text": "Q5. Integral of energy over the planet\n\\(\\nextSection\\)\nIgnoring the effects of albedo, the total radiation absorbed over the surface of the planet (per unit time) is given by \\[\n\\iint_{\\text{planet}} Qs(y=\\sin\\varphi) \\, \\mathrm{d}S.\n\\] This is what is known as a surface integral (?sec-appendix-surfaceintegral). In the case of the spherical coordinate system, this is calculated by \\[\n\\int_{\\theta=0}^{2\\pi} \\int_{\\varphi = -\\pi/2}^{\\pi/2} Qs(y = \\sin\\varphi) R_E^2 \\cos\\varphi \\, \\mathrm{d}\\varphi \\mathrm{d}\\theta.\n\\] Use the properties of \\(s(y)\\) in (?eq-EBM-s) to conclude that the total radiation absorbed is \\(4\\pi R_E^2 Q\\).",
    "crumbs": [
      "Exercises",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Problem set 4</span>"
    ]
  },
  {
    "objectID": "part-xx-exercises/ps04.html#q6.-mean-temperature-in-the-latitude-dependent-ebm",
    "href": "part-xx-exercises/ps04.html#q6.-mean-temperature-in-the-latitude-dependent-ebm",
    "title": "12  Problem set 4",
    "section": "Q6. Mean temperature in the latitude-dependent EBM",
    "text": "Q6. Mean temperature in the latitude-dependent EBM\n\\(\\nextSection\\)\nConsider now the latitude-dependent EBM \\[\nC \\frac{\\mathrm{\\partial}T}{\\mathrm{\\partial}t} = Qs(y)[1 - a(y)] - (A + BT) + k(\\bar{T} - T).\n\\] Recall the albedo is given by \\(a = a_i\\) for \\(y &gt; y_s\\) and \\(a = a_w\\) for \\(y &lt; y_s\\).\n\nBy integrating the above equation over \\(y \\in [0, 1]\\), show that the mean temperature is given by \\[\nC \\frac{\\mathrm{d}\\bar{T}}{\\mathrm{d}t} = Q(1 - \\bar{a}) - (A + B\\bar{T}),\n\\tag{12.2}\\] where \\[\n\\bar{a} = \\int_0^1 s(y) a(y) \\, \\mathrm{d}y = \\alpha_w \\int_0^{y_s} s(y) \\, \\mathrm{d}y + a_i \\int_{y_s}^1 s(y) \\, \\mathrm{d}y.\n\\]\nIn the case that \\(s\\) is given by (?eq-EBM-s), show that \\[\n\\bar{a} = a_i + (a_w - a_i) y_s[1 - 0.241(y_s^2 - 1)].\n\\tag{12.3}\\] What is \\(\\bar{a}\\) in the two situations of a completely ice-covered world and an ice-free world?\nUsing Python, plot a graph of the steady-state temperature, \\(T^*\\), which satisfies \\[\n\\bar{T}^* = \\frac{Q(1 - \\bar{a}) - A}{B},\n\\tag{12.4}\\] as a function of the ice line location, \\(y_s \\in [0, 1]\\).\nIn the numerical code designed in lectures ma30287/notebooks/lecture17-latitudeebm_newton.ipynb we used numerical quadratic to determine \\(\\bar{T}\\). Experiment with a modest number of mesh points and verify how well the integration scheme compares with the exact solution shown above.",
    "crumbs": [
      "Exercises",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Problem set 4</span>"
    ]
  },
  {
    "objectID": "part-xy-problemclasses/problemclass_noteable.html",
    "href": "part-xy-problemclasses/problemclass_noteable.html",
    "title": "13  Problem class 1: an introduction to Noteable",
    "section": "",
    "text": "13.1 Getting started with Noteable\nDuring this module, we will perform various computational experiments using Python. In order to make it easy for students to code in Python from a variety of devices (desktops, laptops, tablets, and even a phone), we use a cloud-computing system called Noteable that allows you to code from within a web browser. Students who like to code using their own Python setup on their computer can also do so. The goal of this problem class is to quickly get you up to speed with the basic Noteable system, and how to manipulate outputs. We should cover:\nUse your Moodle course page to access the Noteable Python interface by clicking on the appropriate link in the course materials. Follow the instructions on the Moodle page to add the Git repository to your directory.",
    "crumbs": [
      "Problem classes",
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>Problem class 1: an introduction to Noteable</span>"
    ]
  },
  {
    "objectID": "part-xy-problemclasses/problemclass_noteable.html#getting-started-with-noteable",
    "href": "part-xy-problemclasses/problemclass_noteable.html#getting-started-with-noteable",
    "title": "13  Problem class 1: an introduction to Noteable",
    "section": "",
    "text": "Navigate to the welcome screen for MA30287 and follow the instructions in Welcome.ipynb and FirstTimeSetup.ipynb in order to create your own local directory at /MA30287_workspace/\nNavigate to the workspace folder. Click New -&gt; Notebook. If asked, select the kernel Python 3 (ipykernel).\nIn the first line of input, select, in toolbar Code -&gt; Markdown. This allows you to annotate your notebook with Markdown-style text input.\nIn the first line of input, type # Problem class 1. Then either type Shift + Enter or press the play button which will execute the line(s) of input. Your markdown text should render as a nicely formatted entry.\nRename the file to something appropriate, like problemclass01. You can do this by right-clicking the filename in the file manager and selecting Rename.\nProceed to the next question.",
    "crumbs": [
      "Problem classes",
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>Problem class 1: an introduction to Noteable</span>"
    ]
  },
  {
    "objectID": "part-xy-problemclasses/problemclass_noteable.html#mathematical-plotting",
    "href": "part-xy-problemclasses/problemclass_noteable.html#mathematical-plotting",
    "title": "13  Problem class 1: an introduction to Noteable",
    "section": "13.2 Mathematical plotting",
    "text": "13.2 Mathematical plotting\n\\(\\nextSection\\)\nThree key Python packages used throughout this course are numpy, matplotlib, and scipy. Numpy provides array functionality, allowing you to naturally manipulate vectors and matrices. Matplotlib is a general plotting package for Python, allowing for the creation of (typically) 2D and 3D plots. And scipy provides algorithms for differential and integral operations allowing e.g. the solution of differential equations.\nHere is a script to generate a graph of a sine curve.\n\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nx = np.linspace(0, 4*np.pi, 50)\ny = np.sin(x)\nplt.plot(x, y)\nplt.xlabel('x');\nplt.ylabel('sin(x)');\nplt.grid(1)\n\n\n\n\n\n\n\n\nHere is a script to generate a 3D plot.\n\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom mpl_toolkits.mplot3d import Axes3D\n\n# Define the function\ndef f(x, y):\n    return np.sin(np.sqrt(x**2 + y**2)) * np.exp(- (x**2 + y**2) / 10)\n\n# Create grid\nx = np.linspace(-5, 5, 50)\ny = np.linspace(-5, 5, 50)\nX, Y = np.meshgrid(x, y)\nZ = f(X, Y)\n\n# Plot the surface\nfig = plt.figure(figsize=(8, 6))\nax = fig.add_subplot(111, projection='3d')\nax.plot_surface(X, Y, Z, cmap='viridis')\n\n# Labels and title\nax.set_xlabel(\"x\")\nax.set_ylabel(\"y\")\nax.set_zlabel(\"z\")\nplt.show()",
    "crumbs": [
      "Problem classes",
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>Problem class 1: an introduction to Noteable</span>"
    ]
  },
  {
    "objectID": "part-xy-problemclasses/problemclass_noteable.html#debugging-jupyter-code",
    "href": "part-xy-problemclasses/problemclass_noteable.html#debugging-jupyter-code",
    "title": "13  Problem class 1: an introduction to Noteable",
    "section": "13.3 Debugging Jupyter code",
    "text": "13.3 Debugging Jupyter code\n\\(\\nextSection\\)\nIt would be good to demonstrate a workflow to understand how errors are diagnosed and studied (e.g. by printing simple variables throughout the script). Also, it would be good to show students how graphs can be zoomed in/out and/or rotated within the browser interface (this may be tricky in Noteable).",
    "crumbs": [
      "Problem classes",
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>Problem class 1: an introduction to Noteable</span>"
    ]
  },
  {
    "objectID": "part-xy-problemclasses/problemclass_noteable.html#outputting-and-saving",
    "href": "part-xy-problemclasses/problemclass_noteable.html#outputting-and-saving",
    "title": "13  Problem class 1: an introduction to Noteable",
    "section": "13.4 Outputting and saving",
    "text": "13.4 Outputting and saving\n\\(\\nextSection\\)\nDuring the problem class, we will also show how to:\n\nCreate a zip file of your workspace using the terminal so that you can save a copy of your files onto your local filesystem. This can be done by running the script ExportMA30287.ipynb in the root directory of the Noteable system, and then downloading the result.\nCreate a copy of your script in PDF form so that it can be sent around as a single document. This can be done by going to File -&gt; Save and Export Notebook As…",
    "crumbs": [
      "Problem classes",
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>Problem class 1: an introduction to Noteable</span>"
    ]
  },
  {
    "objectID": "part-xy-problemclasses/problemclass_noteable.html#challenge-coding-exercise",
    "href": "part-xy-problemclasses/problemclass_noteable.html#challenge-coding-exercise",
    "title": "13  Problem class 1: an introduction to Noteable",
    "section": "13.5 Challenge coding exercise",
    "text": "13.5 Challenge coding exercise\n\\(\\nextSection\\)\nCreate an animation of the 2D or 3D plot, e.g. by making it so the waves ‘ripple’. Using a for loop, animate the wave. Then output the animation as a video file.",
    "crumbs": [
      "Problem classes",
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>Problem class 1: an introduction to Noteable</span>"
    ]
  },
  {
    "objectID": "part-xy-problemclasses/problemclass_dim.html",
    "href": "part-xy-problemclasses/problemclass_dim.html",
    "title": "14  Problem class 2: dimensional analysis",
    "section": "",
    "text": "14.1 Projectile motion\nIn this problem class, we will practice some concepts about non-dimensionalising in preparation for the Problem Set 1 in Chapter 9. We will cover these two strategies in choosing scalings.\nHere are the problems we shall do in the problem class.\nA projectile of mass \\(M\\) (in kg) is launched vertically with initial velocity \\(V_0\\) (in m/s) from a position \\(Y_0\\) (in m) above the surface. Thus the mass’s position, \\(Y(t)\\) is governed by Newton’s second law (applied to the mass and the mass of the Earth) and the set of equations \\[\n\\begin{gathered}\nM Y_{tt} = - \\frac{g R_E^2 M}{(R_E + Y)^2}, \\\\\nY(0) = Y_0,\n\\end{gathered}\n\\] where \\(g = 9.81 m/s^2\\) and \\(R_E = 6.4 \\times 10^6 m\\) is the radius of the Earth.",
    "crumbs": [
      "Problem classes",
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>Problem class 2: dimensional analysis</span>"
    ]
  },
  {
    "objectID": "part-xy-problemclasses/problemclass_dim.html#projectile-motion",
    "href": "part-xy-problemclasses/problemclass_dim.html#projectile-motion",
    "title": "14  Problem class 2: dimensional analysis",
    "section": "",
    "text": "Non-dimensionalise the equation using arbitary length and time scales.\nIdentify the non-dimensional constants, \\(\\Pi_i\\).\nChoose a length scale of \\(L = Y_0\\) and time scale of \\(T = (L/g)^{1/2}\\). Discuss the resultant equation and the interpretation of choosing these scales.\nDoes your above choice allow you to easily study the limit of \\(R_E \\to \\infty\\)? If the limit can be taken, reduce the governing system to a simpler equation.\nDoes your choice in 3. allow you to easily study the limit of \\(Y_0 \\to 0\\)? If not, choose an alternative choice of length and time scales and in that case, reduce the set of equations.",
    "crumbs": [
      "Problem classes",
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>Problem class 2: dimensional analysis</span>"
    ]
  },
  {
    "objectID": "part-xy-problemclasses/problemclass_dim.html#terminal-velocity",
    "href": "part-xy-problemclasses/problemclass_dim.html#terminal-velocity",
    "title": "14  Problem class 2: dimensional analysis",
    "section": "14.2 Terminal velocity",
    "text": "14.2 Terminal velocity\n\\(\\nextSection\\)\nA ball of radius \\(R\\) (in m) and uniform density \\(\\rho\\) (in kg/m3) falls in a viscous fluid. The fluid has density \\(\\rho_f\\) (in kg/m3) and viscosity (a measure of friction or resistance) \\(\\mu\\) (in kg/(m s)). The equation that governs the velocity is \\[\n\\begin{gathered}\n\\frac{4}{3} \\pi R^3 \\rho \\frac{\\mathrm{d}V}{\\mathrm{d}t} = \\frac{4}{3} \\pi R^3 (\\rho - \\rho_f) g - 6\\pi \\mu R V, \\\\\nV(0) = V_0.\n\\end{gathered}\n\\]\n\nChoose appropriate velocity and time scales to non-dimensionalise the equation so as to leave only a single non-dimensional number on the drag term (the last term on the right hand-side).\nDefine the non-dimensional parameter expressing a ratio between drag force and gravity force by the Stokes number (St) and confirm that it is \\[\nSt = \\frac{9\\mu V_0}{2(\\rho - \\rho_f) g R^3}.\n\\]\nComment on the two limits of \\(St \\to 0\\) and \\(St \\to \\infty\\). Can the problem be reduced in these two limits? If so, reduce and solve.",
    "crumbs": [
      "Problem classes",
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>Problem class 2: dimensional analysis</span>"
    ]
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Fourier, Joseph. 1827. “Mémoire Sur Les\nTempératures Du Globe Terrestre Et Des Espaces\nPlanétaires.” Mémoires de\nl’Académie Royale Des Sciences de l’Institut de France\n7: 570–604.\n\n\nFowler, Andrew. 2011. Mathematical Geoscience. Vol. 36.\nSpringer.\n\n\nKaper, H., and H. Engler. 2013. Mathematics and Climate. SIAM.\n\n\nMacKay, D. J. C. 2009. Sustainable Energy – Without the Hot\nAir. UIT Cambridge Ltd.\n\n\nPouillet, Claude Servais Mathias. 1838. “Memoire Sur Le Chaleur\nSolaire.” Paris.\n\n\nVan der Veen, CJ. 2000. “Fourier and the ‘Greenhouse\nEffect’.” Polar Geography 24 (2): 132–52.",
    "crumbs": [
      "References"
    ]
  }
]